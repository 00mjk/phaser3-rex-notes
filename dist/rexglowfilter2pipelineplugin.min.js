!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).rexglowfilter2pipelineplugin=t()}(this,function(){"use strict";function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&n(e,t)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function n(e,t){return(n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function c(r){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=s(r);if(o){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return a(this,e)}}function t(e){var t=h(e,"quality",0,1),n=h(e,"distance",10);return"#ifdef GL_FRAGMENT_PRECISION_HIGH\n#define highmedp highp\n#else\n#define highmedp mediump\n#endif\nprecision highmedp float;\n\n// Scene buffer\nuniform sampler2D uMainSampler; \nvarying vec2 outTexCoord;\n\n// Effect parameters\nuniform vec2 texSize;\nuniform float outerStrength;\nuniform float innerStrength;\nuniform vec4 glowColor; // (0, 0, 0);\n\n// const\nconst float PI = 3.14159265358979323846264;\n\nconst float DIST = __DIST__;\nconst float ANGLE_STEP_SIZE = min(__ANGLE_STEP_SIZE__, PI * 2.0);\nconst float ANGLE_STEP_NUM = ceil(PI * 2.0 / ANGLE_STEP_SIZE);\n\nconst float MAX_TOTAL_ALPHA = ANGLE_STEP_NUM * DIST * (DIST + 1.0) / 2.0;\n\n\nvoid main(void) {\n  vec2 px = vec2(1./texSize.x, 1./texSize.y);\n\n  float totalAlpha = 0.0;\n\n  vec2 direction;\n  vec2 offset;\n  vec4 curColor;\n\n  for (float angle = 0.; angle < PI * 2.; angle += ANGLE_STEP_SIZE) {\n     direction = vec2(cos(angle), sin(angle)) * px;\n\n     for (float curDistance = 0.0; curDistance < DIST; curDistance++) {\n         offset = direction * (curDistance + 1.0);\n         curColor = texture2D(uMainSampler, outTexCoord + offset);\n         totalAlpha += (DIST - curDistance) * curColor.a;\n     }\n  }\n  \n  curColor = texture2D(uMainSampler, outTexCoord);\n\n  float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\n\n  float innerGlowAlpha = (1.0 - alphaRatio) * innerStrength * curColor.a;\n  float innerGlowStrength = min(1.0, innerGlowAlpha);\n  \n  vec4 innerColor = mix(curColor, glowColor, innerGlowStrength);\n\n  float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\n  float outerGlowStrength = min(1.0 - innerColor.a, outerGlowAlpha);\n\n  vec4 outerGlowColor = outerGlowStrength * glowColor.rgba;\n  \n  gl_FragColor = innerColor + outerGlowColor;\n}\n".replace(/__ANGLE_STEP_SIZE__/gi,"".concat((1/t/n).toFixed(7))).replace(/__DIST__/gi,"".concat(Math.round(n).toFixed(0),".0"))}function f(e){return null==e||""===e||0===e.length}var h=Phaser.Utils.Objects.GetValue,e=Phaser.Renderer.WebGL.Pipelines.PostFXPipeline,p=Phaser.Utils.Objects.GetValue,g=Phaser.Display.Color.IntegerToRGB,y=Phaser.Display.Color,v=.1,d=10,P=t({quality:v,distance:d}),S=function(){l(r,e);var n=c(r);function r(e){var t;return o(this,r),(t=n.call(this,{name:"rexGlowFilterPostFx",game:e,renderTarget:!0,fragShader:P})).outerStrength=0,t.innerStrength=0,t._glowColor=new y,t}return i(r,[{key:"resetFromJSON",value:function(e){return this.setOuterStrength(p(e,"outerStrength",4)),this.setInnerStrength(p(e,"innerStrength",0)),this.setGlowColor(p(e,"glowColor",16777215)),this}},{key:"onPreRender",value:function(){this.set1f("outerStrength",this.outerStrength),this.set1f("innerStrength",this.innerStrength);var e=this._glowColor;this.set4f("glowColor",e.redGL,e.greenGL,e.blueGL,e.alphaGL),this.set2f("texSize",this.renderer.width,this.renderer.height)}},{key:"setOuterStrength",value:function(e){return this.outerStrength=e,this}},{key:"setInnerStrength",value:function(e){return this.innerStrength=e,this}},{key:"glowColor",get:function(){return this._glowColor},set:function(e){"number"==typeof e&&(e=g(e)),this._glowColor.setFromRGB(e)}},{key:"setGlowColor",value:function(e){return this.glowColor=e,this}}],[{key:"setQuality",value:function(e){v!==e&&(P=t({quality:v=e,distance:d}))}},{key:"getQuality",value:function(){return v}},{key:"setDistance",value:function(e){d!==e&&(P=t({quality:v,distance:d=e}))}},{key:"getDistance",value:function(){return d}}]),r}(),m=Phaser.Utils.Array.SpliceOne,_=function(){l(t,Phaser.Plugins.BasePlugin);var e=c(t);function t(){return o(this,t),e.apply(this,arguments)}return i(t,[{key:"setPostPipelineClass",value:function(e,t){return this.PostFxPipelineClass=e,this.postFxPipelineName=t,this}},{key:"start",value:function(){this.game.events.once("destroy",this.destroy,this),this.game.renderer.pipelines.addPostPipeline(this.postFxPipelineName,this.PostFxPipelineClass)}},{key:"add",value:function(e,t){void 0===t&&(t={}),e.setPostPipeline(this.PostFxPipelineClass);var n=e.postPipelines[e.postPipelines.length-1];return n.resetFromJSON(t),t.name&&(n.name=t.name),n}},{key:"remove",value:function(e,t){var n=this.PostFxPipelineClass;if(void 0===t)for(var r=(o=e.postPipelines).length-1;0<=r;r--){(l=o[r])instanceof n&&(l.destroy(),m(o,r))}else{r=0;for(var o,i=(o=e.postPipelines).length;r<i;r++){var l;(l=o[r])instanceof n&&l.name===t&&(l.destroy(),m(o,r))}}return this}},{key:"get",value:function(e,t){var n=this.PostFxPipelineClass;if(void 0===t){for(var r=[],o=0,i=(l=e.postPipelines).length;o<i;o++){(s=l[o])instanceof n&&r.push(s)}return r}var l;for(o=0,i=(l=e.postPipelines).length;o<i;o++){var s;if((s=l[o])instanceof n&&s.name===t)return s}}}]),t}(),w=function(){l(r,_);var n=c(r);function r(e){var t;return o(this,r),(t=n.call(this,e)).setPostPipelineClass(S,"rexGlowFilter2PostFx"),t}return i(r,[{key:"setQuality",value:function(e){return S.setQuality(e),this}},{key:"quality",get:function(){return S.getQuality()},set:function(e){this.setQuality(e)}},{key:"setDistance",value:function(e){return S.setDistance(e),this}},{key:"distance",get:function(){return S.getDiatance()},set:function(e){this.setDistance(e)}}]),r}();return function(e,t,n){if("object"===u(e)){if(f(t)){if(null==n)return;"object"===u(n)&&(e=n)}else{"string"==typeof t&&(t=t.split("."));var r=t.pop();(function(e,t,n){var r=e;if(!f(t)){var o;"string"==typeof t&&(t=t.split("."));for(var i=0,l=t.length;i<l;i++){var s;if(null==r[o=t[i]]||"object"!==u(r[o]))s=i!==l-1||void 0===n?{}:n,r[o]=s;r=r[o]}}return r})(e,t)[r]=n}}}(window,"RexPlugins.Pipelines.GlowFilter2PostFx",S),w});
