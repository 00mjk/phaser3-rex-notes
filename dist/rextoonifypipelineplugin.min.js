!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).rextoonifypipelineplugin=t()}(this,function(){"use strict";function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function e(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&n(e,t)}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function n(e,t){return(n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function i(i){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t,n,r=a(i);if(s){var o=a(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return t=this,!(n=e)||"object"!=typeof n&&"function"!=typeof n?u(t):n}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=a(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t,n){void 0===n&&(n=!1);var r=n?h:function(e){for(var t="",n=0;n<e;n++)0<n&&(t+="  else "),n<e-1&&(t+="if (outTexId < ".concat(n,".5) ")),t+="{return texture2D(uMainSampler[".concat(n,"], ").concat(s,");}\n");var r=l.replace(/%count%/gi,e.toString());return r=r.replace(/%forloop%/gi,t)}(t);return e=e.replace(/%MyTexture2D%/gi,r)}var s="coords",l="uniform sampler2D uMainSampler[%count%];\nvarying vec2 outTexCoord;\nvarying float outTexId;\nvec4 MyTexture2D(vec2 ".concat(s,") {\n  %forloop%\n}"),h="uniform sampler2D uMainSampler;\nvarying vec2 outTexCoord;\nvec4 MyTexture2D(vec2 ".concat(s,") {\n    return texture2D(uMainSampler, ").concat(s,");\n}"),t=Phaser.Renderer.WebGL.Pipelines.MultiPipeline,p=Phaser.Utils.Objects.GetValue,d=Phaser.Display.Color.IntegerToRGB,g=Phaser.Display.Color,x=function(){o(l,t);var s=i(l);function l(e,t,n){var r;c(this,l);var o=e.game,i=v("#ifdef GL_FRAGMENT_PRECISION_HIGH\n#define highmedp highp\n#else\n#define highmedp mediump\n#endif\nprecision highmedp float;\n\n// Scene buffer\n%MyTexture2D%\nuniform vec2 texSize;\n\n// Effect parameters\nuniform float edgeThreshold; // 0.2;\nuniform float hStep;  // 60\nuniform float sStep;  // 0.15\nuniform float vStep;  // 0.33\nuniform vec3 edgeColor; // (0, 0, 0);\nvec3 RGBToHSV(vec3 color) \n{\n  float minv, maxv, delta;\n  vec3 res;\n  minv = min(min(color.r, color.g), color.b);\n  maxv = max(max(color.r, color.g), color.b);\n  res.z = maxv;            // v\n\n  delta = maxv - minv;\n  if( maxv != 0.0 ) {\n    res.y = delta / maxv;      // s\n  } else {\n    // s = 0, v is undefined\n    res.y = 0.0;\n    res.x = -1.0;\n    return res;\n  }\n\n  if( color.r == maxv ) {\n    res.x = ( color.g - color.b ) / delta;      // between yellow & magenta\n  } else if( color.g == maxv ) {\n    res.x = 2.0 + ( color.b - color.r ) / delta;   // between cyan & yellow\n  } else {\n    res.x = 4.0 + ( color.r - color.g ) / delta;   // between magenta & cyan\n  }\n\n  res.x = res.x * 60.0;            // degrees\n  if( res.x < 0.0 ) {\n    res.x = res.x + 360.0;\n  }\n   \n  return res;\n}\n\nfloat AvgRGB(vec4 color) {\n    return (color.r + color.g + color.b)/3.0;\n}\n\n#define EDGEGAIN 5.0\nbool IsEdge(vec2 coords, vec2 texSize, float threshold) {\n  if (threshold > 1.0) {\n    return false;\n  }\n\n  vec2 tc = coords * texSize;\n  \n  float pixel[9];\n  int k = 0;\n  float delta;\n\n  // read neighboring pixel intensities\n  pixel[0] = AvgRGB( MyTexture2D( (tc + vec2(float(-1), float(-1))) / texSize )  );\n  pixel[1] = AvgRGB( MyTexture2D( (tc + vec2(float(-1), float( 0))) / texSize )  );\n  pixel[2] = AvgRGB( MyTexture2D( (tc + vec2(float(-1), float( 1))) / texSize )  );\n  pixel[3] = AvgRGB( MyTexture2D( (tc + vec2(float( 0), float(-1))) / texSize )  );\n  pixel[4] = AvgRGB( MyTexture2D( (tc + vec2(float( 0), float( 0))) / texSize )  );\n  pixel[5] = AvgRGB( MyTexture2D( (tc + vec2(float( 0), float( 1))) / texSize )  );\n  pixel[6] = AvgRGB( MyTexture2D( (tc + vec2(float( 1), float(-1))) / texSize )  );\n  pixel[7] = AvgRGB( MyTexture2D( (tc + vec2(float( 1), float( 0))) / texSize )  );\n  pixel[8] = AvgRGB( MyTexture2D( (tc + vec2(float( 1), float( 1))) / texSize )  );\n\n  // average color differences around neighboring pixels\n  delta = (abs(pixel[1]-pixel[7])+\n           abs(pixel[5]-pixel[3]) +\n           abs(pixel[0]-pixel[8])+\n           abs(pixel[2]-pixel[6])\n           )/4.0;\n\n  return (clamp(delta*EDGEGAIN, 0.0, 1.0) >= threshold);\n}\n\nvec3 HSVToRGB(float h, float s, float v) {\n  int i;\n  float f, p, q, t;\n  vec3 res;\n  if( s == 0.0 ) {\n    // achromatic (grey)\n    res.x = v;\n    res.y = v;\n    res.z = v;\n    return res;\n  }\n\n  h /= 60.0;         // sector 0 to 5\n  i = int(floor( h ));\n  f = h - float(i);         // factorial part of h\n  p = v * ( 1.0 - s );\n  q = v * ( 1.0 - s * f );\n  t = v * ( 1.0 - s * ( 1.0 - f ) );  \n  if (i == 0) {\n    res.x = v;\n    res.y = t;\n    res.z = p;\n  } else if (i == 1) {\n    res.x = q;\n    res.y = v;\n    res.z = p;\n  } else if (i == 2) {\n    res.x = p;\n    res.y = v;\n    res.z = t;\n  } else if (i == 3) {\n    res.x = p;\n    res.y = q;\n    res.z = v;\n  } else if (i == 4) {\n    res.x = t;\n    res.y = p;\n    res.z = v;\n  } else { // i == 5\n    res.x = v;\n    res.y = p;\n    res.z = q;\n  }\n  return res;\n}\nvoid main()\n{\n  vec4 front = MyTexture2D(outTexCoord);  \n  vec3 colorLevel;\n  if ((hStep > 0.0) || (sStep > 0.0) || (vStep > 0.0)) {\n    vec3 colorHsv = RGBToHSV(front.rgb);  \n    if (hStep > 0.0) {\n      colorHsv.x = min(floor((colorHsv.x / hStep) + 0.5) * hStep, 360.0);\n    }\n    if (sStep > 0.0) {\n      colorHsv.y = min(floor((colorHsv.y / sStep) + 0.5) * sStep, 1.0);\n    }\n    if (vStep > 0.0) {\n      colorHsv.z = min(floor((colorHsv.z / vStep) + 0.5) * vStep, 1.0);\n    }\n    colorLevel = HSVToRGB(colorHsv.x, colorHsv.y, colorHsv.z);\n  } else {\n    colorLevel = front.rgb;\n  }\n\n  vec3 outColor = (IsEdge(outTexCoord, texSize, edgeThreshold))? edgeColor : colorLevel;\n  gl_FragColor = vec4(outColor, front.a);\n}",o.renderer.maxTextures);return(r=s.call(this,{game:o,fragShader:i,name:t,uniforms:["edgeThreshold","hStep","sStep","vStep","edgeColor","texSize"]}))._width=0,r._height=0,r._edgeGain=0,r._edgeThreshold=0,r._hueLevels=0,r._satLevels=0,r._valLevels=0,r._edgeColor=new g,o.renderer.pipelines.add(t,u(r)),r.resetFromJSON(n),r}return e(l,[{key:"resetFromJSON",value:function(e){return this.setEdgeThreshold(p(e,"edgeThreshold",.2)),this.setHueLevels(p(e,"hueLevels",0)),this.setSatLevels(p(e,"satLevels",0)),this.setValLevels(p(e,"valLevels",0)),this.setEdgeColor(p(e,"edgeColor",0)),this}},{key:"bind",value:function(){f(a(l.prototype),"bind",this).call(this),this.set1f("edgeThreshold",this._edgeThreshold),this.set1f("hStep",this.hueStep),this.set1f("sStep",this.satStep),this.set1f("vStep",this.valStep),this.set3f("edgeColor",this._edgeColor.redGL,this._edgeColor.greenGL,this._edgeColor.blueGL),this.set2f("texSize",this._width,this._height)}},{key:"setEdgeThreshold",value:function(e){return this.edgeThreshold=e,this}},{key:"setHueLevels",value:function(e){return this.hueLevels=e,this}},{key:"setSatLevels",value:function(e){return this.satLevels=e,this}},{key:"setValLevels",value:function(e){return this.valLevels=e,this}},{key:"setEdgeColor",value:function(e){return this.edgeColor=e,this}},{key:"resize",value:function(e,t,n){return this._width=e,this._height=t,f(a(l.prototype),"resize",this).call(this,e,t,n),this}},{key:"edgeThreshold",get:function(){return this._edgeThreshold},set:function(e){this._edgeThreshold=e}},{key:"hueLevels",get:function(){return this._hueLevels},set:function(e){this._hueLevels=e}},{key:"hueStep",get:function(){return 0<this._hueLevels?360/this._hueLevels:0}},{key:"satLevels",get:function(){return this._satLevels},set:function(e){this._satLevels=e}},{key:"satStep",get:function(){return 0<this._satLevels?1/this._satLevels:0}},{key:"valLevels",get:function(){return this._valLevels},set:function(e){this._valLevels=e}},{key:"valStep",get:function(){return 0<this._valLevels?1/this._valLevels:0}},{key:"edgeColor",get:function(){return this._edgeColor},set:function(e){"number"==typeof e&&(e=d(e)),this._edgeColor.setFromRGB(e)}}]),l}();return function(){o(n,Phaser.Plugins.BasePlugin);var t=i(n);function n(e){return c(this,n),t.call(this,e)}return e(n,[{key:"start",value:function(){this.game.events.on("destroy",this.destroy,this)}},{key:"add",value:function(e,t,n){return new x(e,t,n)}}]),n}()});
