{
    "docs": [
        {
            "location": "/index.html", 
            "text": "Phaser\n\n\nPhaser\n is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.\n\n\nList of my plugins\n\n\n\n\nCanvas\n: Drawing on \ncanvas\n.\n\n\nClock\n: A clock to count elapsed time.\n\n\nDrag\n: Drag game object.\n\n\nDrag-cursor\n: Simulate curosr keys according dragging events.\n\n\nGashapon\n: Pick random item from box.\n\n\nLZ-string\n: Compress string using LZ-based compression algorithm.\n\n\nPage\n: Display text page by page on text object.\n\n\nRun-commands\n: Run commands in array.\n\n\nTCRP.Player\n: Run commands on time.\n\n\nTCRP.Recorder\n: Store commands with time.\n\n\nTyping\n: Typing text on text object.\n\n\nWebfont-loader\n: Load web font by google webfont loader in preload stage.\n\n\nXOR\n: Encrypt or decrypt string by XOR algorithm.", 
            "title": "Home"
        }, 
        {
            "location": "/index.html#phaser", 
            "text": "Phaser  is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.", 
            "title": "Phaser"
        }, 
        {
            "location": "/index.html#list-of-my-plugins", 
            "text": "Canvas : Drawing on  canvas .  Clock : A clock to count elapsed time.  Drag : Drag game object.  Drag-cursor : Simulate curosr keys according dragging events.  Gashapon : Pick random item from box.  LZ-string : Compress string using LZ-based compression algorithm.  Page : Display text page by page on text object.  Run-commands : Run commands in array.  TCRP.Player : Run commands on time.  TCRP.Recorder : Store commands with time.  Typing : Typing text on text object.  Webfont-loader : Load web font by google webfont loader in preload stage.  XOR : Encrypt or decrypt string by XOR algorithm.", 
            "title": "List of my plugins"
        }, 
        {
            "location": "/touchevents/index.html", 
            "text": "Introduction\n\n\nBuilt-in touch/mouse events of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nMouse/touch events\n\n\nscene\n.\ninput\n.\non\n(\npointerdown\n,\n \nfunction\n(\npointer\n,\n \ncurrentlyOver\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\npointerup\n,\n \nfunction\n(\npointer\n,\n \ncurrentlyOver\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\npointermove\n,\n \nfunction\n(\npointer\n,\n \ncurrentlyOver\n){\n \n/* ... */\n \n});\n\n\n\nscene\n.\ninput\n.\non\n(\npointerover\n,\n \nfunction\n(\npointer\n,\n \njustOver\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\npointerout\n,\n \nfunction\n(\npointer\n,\n \njustOut\n){\n \n/* ... */\n \n});\n\n\n\n\n\nMouse/touch events of game object\n\n\n\n\nRegister game object\n\n\n\n\ngameObject\n.\nsetInteractive\n();\n       \n// enable\n\n\n// gameObject.setInteractive(false);  // disable\n\n\n\n\n\n\n\nMouse/touch events of a game object\n\n\n\n\ngameObject\n.\non\n(\npointerdown\n,\n \nfunction\n(\npointer\n,\n \nlocalX\n,\n \nlocalY\n,\n \ncamera\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\npointerup\n,\n \nfunction\n(\npointer\n,\n \nlocalX\n,\n \nlocalY\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\npointermove\n,\n \nfunction\n(\npointer\n,\n \nlocalX\n,\n \nlocalY\n){\n \n/* ... */\n \n});\n\n\n\ngameObject\n.\non\n(\npointerover\n,\n \nfunction\n(\npointer\n,\n \nlocalX\n,\n \nlocalY\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\npointerout\n,\n \nfunction\n(\npointer\n){\n \n/* ... */\n \n});\n\n\n\n\n\nscene\n.\ninput\n.\non\n(\ngameobjectdown\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ngameobjectup\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ngameobjectmove\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\n\nscene\n.\ninput\n.\non\n(\ngameobjectover\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ngameobjectout\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\n\n\n\nDrag events\n\n\n\n\nRegister game object and enable dragging\n\n\n\n\ngameObject\n.\nsetInteractive\n();\n           \n// enable touching interactive\n\n\nscene\n.\ninput\n.\nsetDraggable\n(\ngameObject\n);\n  \n// enable dragging\n\n\n// scene.input.dragDistanceThreshold = 16;\n\n\n// scene.input.dragTimeThreshold = 500;\n\n\n\n// gameObject.setInteractive(false);             // disable\n\n\n// scene.input.setDraggable(gameObject, false);  // disable dragging\n\n\n\n\n\ngameObject\n.\non\n(\ndragstart\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\ndrag\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\ndragend\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n,\n \ndropped\n{\n \n/* ... */\n \n});\n\n\n\n\n\nscene\n.\ninput\n.\non\n(\ndragstart\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ndrag\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ndragX\n,\n \ndragY\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ndragend\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ndropped\n){\n \n/* ... */\n \n});\n\n\n\n\n\nDrop events\n\n\ngameObject\n.\non\n(\ndrop\n,\n \nfunction\n(\npointer\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\n\ngameObject\n.\non\n(\ndragenter\n,\n \nfunction\n(\npointer\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\ndragover\n,\n \nfunction\n(\npointer\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\ngameObject\n.\non\n(\ndragleave\n,\n \nfunction\n(\npointer\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\n\n\n\nscene\n.\ninput\n.\non\n(\ndrop\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\n\nscene\n.\ninput\n.\non\n(\ndragenter\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ndragover\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\nscene\n.\ninput\n.\non\n(\ndragleave\n,\n \nfunction\n(\npointer\n,\n \ngameObject\n,\n \ntarget\n){\n \n/* ... */\n \n});\n\n\n\n\n\nProperties of point\n\n\n\n\nPosition of current touching: \npointer.x\n , \npointer.y\n\n\nPosition of touching start: \npointer.downX\n, \npointer.downY\n\n\nPosition of touching end: \npointer.upX\n, \npointer.upY\n\n\nNo botton down: \npointer.noButtonDown()\n\n\nIs left botton down: \npointer.leftButtonDown()\n\n\nIs right botton down: \npointer.rightButtonDown()", 
            "title": "Touch events"
        }, 
        {
            "location": "/touchevents/index.html#introduction", 
            "text": "Built-in touch/mouse events of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/touchevents/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/touchevents/index.html#mousetouch-events", 
            "text": "scene . input . on ( pointerdown ,   function ( pointer ,   currentlyOver ){   /* ... */   });  scene . input . on ( pointerup ,   function ( pointer ,   currentlyOver ){   /* ... */   });  scene . input . on ( pointermove ,   function ( pointer ,   currentlyOver ){   /* ... */   });  scene . input . on ( pointerover ,   function ( pointer ,   justOver ){   /* ... */   });  scene . input . on ( pointerout ,   function ( pointer ,   justOut ){   /* ... */   });", 
            "title": "Mouse/touch events"
        }, 
        {
            "location": "/touchevents/index.html#mousetouch-events-of-game-object", 
            "text": "Register game object   gameObject . setInteractive ();         // enable  // gameObject.setInteractive(false);  // disable    Mouse/touch events of a game object   gameObject . on ( pointerdown ,   function ( pointer ,   localX ,   localY ,   camera ){   /* ... */   });  gameObject . on ( pointerup ,   function ( pointer ,   localX ,   localY ){   /* ... */   });  gameObject . on ( pointermove ,   function ( pointer ,   localX ,   localY ){   /* ... */   });  gameObject . on ( pointerover ,   function ( pointer ,   localX ,   localY ){   /* ... */   });  gameObject . on ( pointerout ,   function ( pointer ){   /* ... */   });   scene . input . on ( gameobjectdown ,   function ( pointer ,   gameObject ){   /* ... */   });  scene . input . on ( gameobjectup ,   function ( pointer ,   gameObject ){   /* ... */   });  scene . input . on ( gameobjectmove ,   function ( pointer ,   gameObject ){   /* ... */   });  scene . input . on ( gameobjectover ,   function ( pointer ,   gameObject ){   /* ... */   });  scene . input . on ( gameobjectout ,   function ( pointer ,   gameObject ){   /* ... */   });", 
            "title": "Mouse/touch events of game object"
        }, 
        {
            "location": "/touchevents/index.html#drag-events", 
            "text": "Register game object and enable dragging   gameObject . setInteractive ();             // enable touching interactive  scene . input . setDraggable ( gameObject );    // enable dragging  // scene.input.dragDistanceThreshold = 16;  // scene.input.dragTimeThreshold = 500;  // gameObject.setInteractive(false);             // disable  // scene.input.setDraggable(gameObject, false);  // disable dragging   gameObject . on ( dragstart ,   function ( pointer ,   dragX ,   dragY ){   /* ... */   });  gameObject . on ( drag ,   function ( pointer ,   dragX ,   dragY ){   /* ... */   });  gameObject . on ( dragend ,   function ( pointer ,   dragX ,   dragY ,   dropped {   /* ... */   });   scene . input . on ( dragstart ,   function ( pointer ,   gameObject ){   /* ... */   });  scene . input . on ( drag ,   function ( pointer ,   gameObject ,   dragX ,   dragY ){   /* ... */   });  scene . input . on ( dragend ,   function ( pointer ,   gameObject ,   dropped ){   /* ... */   });", 
            "title": "Drag events"
        }, 
        {
            "location": "/touchevents/index.html#drop-events", 
            "text": "gameObject . on ( drop ,   function ( pointer ,   target ){   /* ... */   });  gameObject . on ( dragenter ,   function ( pointer ,   target ){   /* ... */   });  gameObject . on ( dragover ,   function ( pointer ,   target ){   /* ... */   });  gameObject . on ( dragleave ,   function ( pointer ,   target ){   /* ... */   });   scene . input . on ( drop ,   function ( pointer ,   gameObject ,   target ){   /* ... */   });  scene . input . on ( dragenter ,   function ( pointer ,   gameObject ,   target ){   /* ... */   });  scene . input . on ( dragover ,   function ( pointer ,   gameObject ,   target ){   /* ... */   });  scene . input . on ( dragleave ,   function ( pointer ,   gameObject ,   target ){   /* ... */   });", 
            "title": "Drop events"
        }, 
        {
            "location": "/touchevents/index.html#properties-of-point", 
            "text": "Position of current touching:  pointer.x  ,  pointer.y  Position of touching start:  pointer.downX ,  pointer.downY  Position of touching end:  pointer.upX ,  pointer.upY  No botton down:  pointer.noButtonDown()  Is left botton down:  pointer.leftButtonDown()  Is right botton down:  pointer.rightButtonDown()", 
            "title": "Properties of point"
        }, 
        {
            "location": "/keyboardevents/index.html", 
            "text": "Introduction\n\n\nBuilt-in keyboard events of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nAny key down/up events\n\n\nscene\n.\ninput\n.\nkeyboard\n.\non\n(\nkeydown\n,\n \nfunction\n \n(\nevent\n)\n \n{\n \n/* ... */\n});\n\n\nscene\n.\ninput\n.\nkeyboard\n.\non\n(\nkeyup\n,\n \nfunction\n \n(\nevent\n)\n \n{\n \n/* ... */\n});\n\n\n\n\n\nSpecific key down/up events\n\n\nscene\n.\ninput\n.\nkeyboard\n.\non\n(\nkeydown_\n \n+\n \nA\n,\n \nfunction\n \n(\nevent\n)\n \n{\n \n/* ... */\n});\n\n\nscene\n.\ninput\n.\nkeyboard\n.\non\n(\nkeyup_\n \n+\n \nA\n,\n \nfunction\n \n(\nevent\n)\n \n{\n \n/* ... */\n});\n\n\n\n\n\nGet state of specific key\n\n\n\n\nGet key state object\n\n\n\n\nvar\n \nBKey\n \n=\n \nscene\n.\ninput\n.\nkeyboard\n.\naddKey\n(\nPhaser\n.\nInput\n.\nKeyboard\n.\nKeyCodes\n.\nB\n);\n\n\n\n\n\n\n\nGet key state\n\n\n\n\nvar\n \nisDown\n \n=\n \nBKey\n.\nisDown\n;\n\n\nvar\n \nisUp\n \n=\n \nBKey\n.\nisUp\n;\n\n\n\n\n\nGet state of cursorkeys\n\n\n\n\nGet key state object\n\n\n\n\nvar\n \ncursorKeys\n \n=\n \nscene\n.\ninput\n.\nkeyboard\n.\ncreateCursorKeys\n();\n\n\n\n\n\n\n\nGet key state\n\n\n\n\nvar\n \nisUpDown\n \n=\n \ncursorKeys\n.\nup\n.\nisDown\n;\n\n\nvar\n \nisDownDown\n \n=\n \ncursorKeys\n.\ndown\n.\nisDown\n;\n\n\nvar\n \nisLeftDown\n \n=\n \ncursorKeys\n.\nleft\n.\nisDown\n;\n\n\nvar\n \nisRightDown\n \n=\n \ncursorKeys\n.\nright\n.\nisDown\n;\n\n\nvar\n \nisSpaceDown\n \n=\n \ncursorKeys\n.\nspace\n.\nisDown\n;\n\n\nvar\n \nisShiftDown\n \n=\n \ncursorKeys\n.\nshift\n.\nisDown\n;\n\n\n\n\n\nKey map\n\n\n\n\nA\n ~ \nZ\n\n\nF1\n ~ \nF12\n\n\nBACKSPACE\n\n\nTAB\n\n\nENTER\n\n\nSHIFT\n\n\nCTRL\n. \nALT\n\n\nPAUSE\n\n\nCAPS_LOCK\n\n\nESC\n\n\nSPACE\n\n\nPAGE_UP\n, \nPAGE_DOWN\n\n\nEND\n, \nHOME\n\n\nLEFT\n, \nUP\n, \nRIGHT\n,\nDOWN\n\n\nPRINT_SCREEN\n\n\nINSERT\n, \nDELETE\n\n\nZERO\n, \nONE\n, \nTWO\n, \nTHREE\n, \nFOUR\n, \nFIVE\n, \nSIX\n, \nSEVEN\n, \nEIGHT\n, \nNINE\n\n\nOPEN_BRACKET\n, \nCLOSED_BRACKET", 
            "title": "Keyboard events"
        }, 
        {
            "location": "/keyboardevents/index.html#introduction", 
            "text": "Built-in keyboard events of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/keyboardevents/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/keyboardevents/index.html#any-key-downup-events", 
            "text": "scene . input . keyboard . on ( keydown ,   function   ( event )   {   /* ... */ });  scene . input . keyboard . on ( keyup ,   function   ( event )   {   /* ... */ });", 
            "title": "Any key down/up events"
        }, 
        {
            "location": "/keyboardevents/index.html#specific-key-downup-events", 
            "text": "scene . input . keyboard . on ( keydown_   +   A ,   function   ( event )   {   /* ... */ });  scene . input . keyboard . on ( keyup_   +   A ,   function   ( event )   {   /* ... */ });", 
            "title": "Specific key down/up events"
        }, 
        {
            "location": "/keyboardevents/index.html#get-state-of-specific-key", 
            "text": "Get key state object   var   BKey   =   scene . input . keyboard . addKey ( Phaser . Input . Keyboard . KeyCodes . B );    Get key state   var   isDown   =   BKey . isDown ;  var   isUp   =   BKey . isUp ;", 
            "title": "Get state of specific key"
        }, 
        {
            "location": "/keyboardevents/index.html#get-state-of-cursorkeys", 
            "text": "Get key state object   var   cursorKeys   =   scene . input . keyboard . createCursorKeys ();    Get key state   var   isUpDown   =   cursorKeys . up . isDown ;  var   isDownDown   =   cursorKeys . down . isDown ;  var   isLeftDown   =   cursorKeys . left . isDown ;  var   isRightDown   =   cursorKeys . right . isDown ;  var   isSpaceDown   =   cursorKeys . space . isDown ;  var   isShiftDown   =   cursorKeys . shift . isDown ;", 
            "title": "Get state of cursorkeys"
        }, 
        {
            "location": "/keyboardevents/index.html#key-map", 
            "text": "A  ~  Z  F1  ~  F12  BACKSPACE  TAB  ENTER  SHIFT  CTRL .  ALT  PAUSE  CAPS_LOCK  ESC  SPACE  PAGE_UP ,  PAGE_DOWN  END ,  HOME  LEFT ,  UP ,  RIGHT , DOWN  PRINT_SCREEN  INSERT ,  DELETE  ZERO ,  ONE ,  TWO ,  THREE ,  FOUR ,  FIVE ,  SIX ,  SEVEN ,  EIGHT ,  NINE  OPEN_BRACKET ,  CLOSED_BRACKET", 
            "title": "Key map"
        }, 
        {
            "location": "/dragplugin/index.html", 
            "text": "Introduction\n\n\nDrag game object.\n\n\n\n\nAuthor: Rex\n\n\nMember of game object\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\ngameobject\n.\ndrag\n \n=\n \nnew\n \nDragPlugin\n(\ngameobject\n,\n \n{\n\n    \n//enable: true,\n\n    \n//axis: 0,      //0|\nboth\n|\nh\nv\n|1|\nhorizontal\n|\nh\n|2|\nvertical\n|\nv\n\n    \n//rotation: Phaser.Math.DegToRad(45)  // axis rotation in rad\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\nenable: drag-able\n\n\naxis : \n\n\n'both'\n,\n'h\nv'\n, or \n0\n : dragging on all directions.\n\n\n'horizontal'\n,\n'h'\n, or \n1\n : dragging on horizontal axis.\n\n\n'vertical'\n,\n'v'\n, or \n2\n : dragging on vertical axis.\n\n\n\n\n\n\nrotation : axis rotation in rad, available in horizontal or vertical axis mode.\n\n\n\n\nDragging events\n\n\nBuilt-in dragging events\n\n\ngameobject\n.\non\n(\ndragstart\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n){\n \n/*...*/\n \n});\n\n\ngameobject\n.\non\n(\ndrag\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n){\n \n/*...*/\n \n});\n\n\ngameobject\n.\non\n(\ndragend\n,\n \nfunction\n(\npointer\n,\n \ndragX\n,\n \ndragY\n,\n \ndropped\n){\n \n/*...*/\n \n});\n\n\n\n\n\nGet dragging state\n\n\nvar\n \nisDragging\n \n=\n \ngameobject\n.\ndrag\n.\nisDragging\n;\n\n\n\n\n\nSet rotation of axis\n\n\ngameobject\n.\ndrag\n.\nsetAxisRotation\n(\nrad\n);\n\n\n\n\n\nSet axis mode\n\n\ngameobject\n.\ndrag\n.\nsetAxisMode\n(\nm\n);\n  \n//0|\nboth\n|\nh\nv\n|1|\nhorizontal\n|\nh\n|2|\nvertical\n|\nv\n\n\n\n\n\nTry drag\n\n\nGame object will be dragged if there is any point above it.\n\n\ngameobject\n.\ndrag\n.\ndrag\n();\n\n\n\n\n\nDrop\n\n\nGame object will be dropped(dragend) manually.\n\n\ngameobject\n.\ndrag\n.\ndragend\n();", 
            "title": "Drag"
        }, 
        {
            "location": "/dragplugin/index.html#introduction", 
            "text": "Drag game object.   Author: Rex  Member of game object", 
            "title": "Introduction"
        }, 
        {
            "location": "/dragplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/dragplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/dragplugin/index.html#create-instance", 
            "text": "gameobject . drag   =   new   DragPlugin ( gameobject ,   { \n     //enable: true, \n     //axis: 0,      //0| both | h v |1| horizontal | h |2| vertical | v \n     //rotation: Phaser.Math.DegToRad(45)  // axis rotation in rad  });   Properties   enable: drag-able  axis :   'both' , 'h v' , or  0  : dragging on all directions.  'horizontal' , 'h' , or  1  : dragging on horizontal axis.  'vertical' , 'v' , or  2  : dragging on vertical axis.    rotation : axis rotation in rad, available in horizontal or vertical axis mode.", 
            "title": "Create instance"
        }, 
        {
            "location": "/dragplugin/index.html#dragging-events", 
            "text": "Built-in dragging events  gameobject . on ( dragstart ,   function ( pointer ,   dragX ,   dragY ){   /*...*/   });  gameobject . on ( drag ,   function ( pointer ,   dragX ,   dragY ){   /*...*/   });  gameobject . on ( dragend ,   function ( pointer ,   dragX ,   dragY ,   dropped ){   /*...*/   });", 
            "title": "Dragging events"
        }, 
        {
            "location": "/dragplugin/index.html#get-dragging-state", 
            "text": "var   isDragging   =   gameobject . drag . isDragging ;", 
            "title": "Get dragging state"
        }, 
        {
            "location": "/dragplugin/index.html#set-rotation-of-axis", 
            "text": "gameobject . drag . setAxisRotation ( rad );", 
            "title": "Set rotation of axis"
        }, 
        {
            "location": "/dragplugin/index.html#set-axis-mode", 
            "text": "gameobject . drag . setAxisMode ( m );    //0| both | h v |1| horizontal | h |2| vertical | v", 
            "title": "Set axis mode"
        }, 
        {
            "location": "/dragplugin/index.html#try-drag", 
            "text": "Game object will be dragged if there is any point above it.  gameobject . drag . drag ();", 
            "title": "Try drag"
        }, 
        {
            "location": "/dragplugin/index.html#drop", 
            "text": "Game object will be dropped(dragend) manually.  gameobject . drag . dragend ();", 
            "title": "Drop"
        }, 
        {
            "location": "/dragcursorplugin/index.html", 
            "text": "Introduction\n\n\nSimulate curosr keys according dragging events.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \ndragCursor\n \n=\n \nnew\n \nDragCursorPlugin\n(\nscene\n,\n \n{\n\n    \ndir\n:\n \n8dir\n,\n    \n// 0|\nup\ndown\n|1|\nleft\nright|2|\n4dir\n|3|\n8dir\n\n    \ndistanceMin\n:\n \n30\n        \n\n});\n\n\n\n\n\nProperties\n\n\n\n\nmode : \n\n\n'up\ndown'\n, or \n0\n : simulate up or down cursor keys only.\n\n\n'left\nright'\n, or \n1\n : simulate left or right cursor keys only.\n\n\n'4dir'\n, or \n2\n : simulate up, down, left or right cursor keys.\n\n\n'8dir'\n, or \n3\n : simulate up, up-left, up-right, down, down-left, down-right, left, or right cursor keys.\n\n\n\n\n\n\ndistanceMin : cursor keys will be pressed when dragging distance is larger then this value.\n\n\n\n\nGet state of cursor keys\n\n\nvar\n \ncursorKeys\n \n=\n \ndragCursor\n.\ncreateCursorKeys\n();\n\n\n\nvar\n \nisLeftKeyDown\n \n=\n \ncursorKeys\n.\nleft\n.\nisDown\n;\n\n\nvar\n \nisRightKeyDown\n \n=\n \ncursorKeys\n.\nright\n.\nisDown\n;\n\n\nvar\n \nisUpKeyDown\n \n=\n \ncursorKeys\n.\nup\n.\nisDown\n;\n\n\nvar\n \nisDownKeyDown\n \n=\n \ncursorKeys\n.\ndown\n.\nisDown\n;\n\n\n\n\n\nGet dragging point\n\n\nvar\n \ndragStartX\n \n=\n \ndragCursor\n.\nstart\n.\nx\n;\n\n\nvar\n \ndragStartY\n \n=\n \ndragCursor\n.\nstart\n.\ny\n;\n\n\nvar\n \ndragEndX\n \n=\n \ndragCursor\n.\nend\n.\nx\n;\n\n\nvar\n \ndragEndY\n \n=\n \ndragCursor\n.\nend\n.\ny\n;\n\n\n\n\n\nAssign origin point\n\n\nOrigin point is the dragging start point, or assign origin point when creating instance.\n\n\nvar\n \ndragCursor\n \n=\n \nnew\n \nDragCursorPlugin\n(\nscene\n,\n \n{\n\n    \n// ...\n\n    \norigin\n:\n \n{\n       \n// assign origin point to (400,300)\n\n        \nx\n:\n \n400\n,\n\n        \ny\n:\n \n300\n\n    \n}\n\n\n});\n\n\n\n\n\nOr assign origin point by \nsetOrigin(x, y)\n function.\n\n\ndragCursor\n.\nsetOrigin\n(\n400\n,\n \n300\n);\n  \n// assign origin point to (400,300)", 
            "title": "Drag to cursorKeys"
        }, 
        {
            "location": "/dragcursorplugin/index.html#introduction", 
            "text": "Simulate curosr keys according dragging events.   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/dragcursorplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/dragcursorplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/dragcursorplugin/index.html#create-instance", 
            "text": "var   dragCursor   =   new   DragCursorPlugin ( scene ,   { \n     dir :   8dir ,      // 0| up down |1| left right|2| 4dir |3| 8dir \n     distanceMin :   30          });   Properties   mode :   'up down' , or  0  : simulate up or down cursor keys only.  'left right' , or  1  : simulate left or right cursor keys only.  '4dir' , or  2  : simulate up, down, left or right cursor keys.  '8dir' , or  3  : simulate up, up-left, up-right, down, down-left, down-right, left, or right cursor keys.    distanceMin : cursor keys will be pressed when dragging distance is larger then this value.", 
            "title": "Create instance"
        }, 
        {
            "location": "/dragcursorplugin/index.html#get-state-of-cursor-keys", 
            "text": "var   cursorKeys   =   dragCursor . createCursorKeys ();  var   isLeftKeyDown   =   cursorKeys . left . isDown ;  var   isRightKeyDown   =   cursorKeys . right . isDown ;  var   isUpKeyDown   =   cursorKeys . up . isDown ;  var   isDownKeyDown   =   cursorKeys . down . isDown ;", 
            "title": "Get state of cursor keys"
        }, 
        {
            "location": "/dragcursorplugin/index.html#get-dragging-point", 
            "text": "var   dragStartX   =   dragCursor . start . x ;  var   dragStartY   =   dragCursor . start . y ;  var   dragEndX   =   dragCursor . end . x ;  var   dragEndY   =   dragCursor . end . y ;", 
            "title": "Get dragging point"
        }, 
        {
            "location": "/dragcursorplugin/index.html#assign-origin-point", 
            "text": "Origin point is the dragging start point, or assign origin point when creating instance.  var   dragCursor   =   new   DragCursorPlugin ( scene ,   { \n     // ... \n     origin :   {         // assign origin point to (400,300) \n         x :   400 , \n         y :   300 \n     }  });   Or assign origin point by  setOrigin(x, y)  function.  dragCursor . setOrigin ( 400 ,   300 );    // assign origin point to (400,300)", 
            "title": "Assign origin point"
        }, 
        {
            "location": "/loader/index.html", 
            "text": "Introduction\n\n\nLoad assets, built-in object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nLoading in preload stage\n\n\nscene\n.\nload\n.\nimage\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nLoader in preload stage will start loading automatically by scene.\n\n\nLoading after preload stage\n\n\nscene\n.\nload\n.\nimage\n(\nkey\n,\n \nurl\n);\n   \n// add task\n\n\nscene\n.\nload\n.\nonce\n(\ncomplete\n,\n \ncallback\n);\n  \n// add callback of \ncomplete\n event\n\n\nscene\n.\nload\n.\nstart\n();\n                     \n// start loading\n\n\n\n\n\nEvents\n\n\n\n\n\n\nStart loading\n\n\nscene\n.\nload\n.\nonce\n(\nstart\n,\n \nfunction\n(){});\n\n\n\n\n\n\n\n\n\nLoading progressing\n\n\nscene\n.\nload\n.\nonce\n(\nprogress\n,\n \nfunction\n(\nprogress\n){});\n\n\n\n\n\n\n\n\n\nLoading a file object successful\n\n\nscene\n.\nload\n.\nonce\n(\nload\n,\n \nfunction\n(\nfileObj\n){});\n\n\n\n\n\n\n\n\n\nLoading a file object failed\n\n\nscene\n.\nload\n.\nonce\n(\nloaderror\n,\n \nfunction\n(\nfileObj\n){});\n\n\n\n\n\n\n\n\n\nAll loading completed\n\n\nscene\n.\nload\n.\nonce\n(\ncomplete\n,\n \nfunction\n(){});\n\n\n\n\n\n\n\n\n\nStatus of loader\n\n\n\n\n\n\nReady to start loading\n\n\nvar\n \nisReady\n \n=\n \nscene\n.\nload\n.\nisReady\n();\n\n\n\n\n\n\n\n\n\nIs loading\n\n\nvar\n \nisLoading\n \n=\n \nscene\n.\nload\n.\nisLoading\n();\n\n\n\n\n\n\n\n\n\nFile types\n\n\nImage\n\n\nscene\n.\nload\n.\nimage\n(\nkey\n,\n \nurl\n);\n  \n// image\n\n\nscene\n.\nload\n.\nsvg\n(\nkey\n,\n \nurl\n);\n    \n// image in svg format\n\n\nscene\n.\nload\n.\nhtml\n(\nkey\n,\n \nurl\n,\n \nwidth\n,\n \nheight\n);\n  \n// image in html format\n\n\n\n\n\nGet data from texture cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ntextures\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nSprite sheet\n\n\nscene\n.\nload\n.\nspritesheet\n(\nkey\n,\n \nurl\n,\n \n{\n\n    \n// frameWidth: frameWidth,\n\n    \n// frameHeight: frameHeight,\n\n    \n// startFrame: startFrame,\n\n    \n// endFrame: endFrame,\n\n    \n// margin: margin,\n\n    \n// spacing: spacing\n\n\n});\n\n\n\n\n\nGet data from texture cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ntextures\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nTexture atlas\n\n\nscene\n.\nload\n.\natlas\n(\nkey\n,\n \ntextureURL\n,\n \natlasURL\n);\n\n\n\n\n\nGet data from texture cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ntextures\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nMulti file texture atlas\n\n\nscene\n.\nload\n.\nmultiatlas\n(\nkey\n,\n \ntextureURLs\n,\n \natlasURLs\n);\n\n\n\n\n\nUnity texture atlas\n\n\nscene\n.\nload\n.\nunityAtlas\n(\nkey\n,\n \ntextureURL\n,\n \natlasURL\n);\n\n\n\n\n\nAnimation\n\n\nscene\n.\nload\n.\nanimation\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nAudio\n\n\nscene\n.\nload\n.\naudio\n(\nkey\n,\n \nurls\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\naudio\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nAudio sprite\n\n\nscene\n.\nload\n.\naudioSprite\n(\nkey\n,\n \nurls\n,\n \njson\n,\n \nconfig\n);\n\n\n\n\n\nBitmap font\n\n\nscene\n.\nload\n.\nbitmapFont\n(\nkey\n,\n \ntextureURL\n,\n \nxmlURL\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\nbitmapFont\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nTile map\n\n\nscene\n.\nload\n.\ntilemapWeltmeister\n(\nkey\n,\n \nurl\n);\n  \n// JSON\n\n\nscene\n.\nload\n.\ntilemapCSV\n(\nkey\n,\n \nurl\n);\n          \n// CSV\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\ntilemap\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nText\n\n\nscene\n.\nload\n.\ntext\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\ntext\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nJSON\n\n\nscene\n.\nload\n.\njson\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\njson\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nXML\n\n\nscene\n.\nload\n.\nxml\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\nxml\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nScript\n\n\nscene\n.\nload\n.\nscript\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGLSL\n\n\nscene\n.\nload\n.\nglsl\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\nshader\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nBinary\n\n\nscene\n.\nload\n.\nbinary\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nGet data from cache\n\n\nvar\n \ncache\n \n=\n \nscene\n.\ncache\n.\nbinary\n;\n\n\nvar\n \ndata\n \n=\n \ncache\n.\nget\n(\nkey\n);\n\n\n\n\n\nPlugin\n\n\nscene\n.\nload\n.\nplugin\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nRelease data\n\n\nvar cache = scene.cache.text;\ncache.remove(key);\n\n\n\n\nData in cache\n\n\nvar cache = scene.cache.text;\nvar hasData = cache.has(key);", 
            "title": "Loader"
        }, 
        {
            "location": "/loader/index.html#introduction", 
            "text": "Load assets, built-in object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/loader/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/loader/index.html#loading-in-preload-stage", 
            "text": "scene . load . image ( key ,   url );   Loader in preload stage will start loading automatically by scene.", 
            "title": "Loading in preload stage"
        }, 
        {
            "location": "/loader/index.html#loading-after-preload-stage", 
            "text": "scene . load . image ( key ,   url );     // add task  scene . load . once ( complete ,   callback );    // add callback of  complete  event  scene . load . start ();                       // start loading", 
            "title": "Loading after preload stage"
        }, 
        {
            "location": "/loader/index.html#events", 
            "text": "Start loading  scene . load . once ( start ,   function (){});     Loading progressing  scene . load . once ( progress ,   function ( progress ){});     Loading a file object successful  scene . load . once ( load ,   function ( fileObj ){});     Loading a file object failed  scene . load . once ( loaderror ,   function ( fileObj ){});     All loading completed  scene . load . once ( complete ,   function (){});", 
            "title": "Events"
        }, 
        {
            "location": "/loader/index.html#status-of-loader", 
            "text": "Ready to start loading  var   isReady   =   scene . load . isReady ();     Is loading  var   isLoading   =   scene . load . isLoading ();", 
            "title": "Status of loader"
        }, 
        {
            "location": "/loader/index.html#file-types", 
            "text": "", 
            "title": "File types"
        }, 
        {
            "location": "/loader/index.html#image", 
            "text": "scene . load . image ( key ,   url );    // image  scene . load . svg ( key ,   url );      // image in svg format  scene . load . html ( key ,   url ,   width ,   height );    // image in html format   Get data from texture cache  var   cache   =   scene . textures ;  var   data   =   cache . get ( key );", 
            "title": "Image"
        }, 
        {
            "location": "/loader/index.html#sprite-sheet", 
            "text": "scene . load . spritesheet ( key ,   url ,   { \n     // frameWidth: frameWidth, \n     // frameHeight: frameHeight, \n     // startFrame: startFrame, \n     // endFrame: endFrame, \n     // margin: margin, \n     // spacing: spacing  });   Get data from texture cache  var   cache   =   scene . textures ;  var   data   =   cache . get ( key );", 
            "title": "Sprite sheet"
        }, 
        {
            "location": "/loader/index.html#texture-atlas", 
            "text": "scene . load . atlas ( key ,   textureURL ,   atlasURL );   Get data from texture cache  var   cache   =   scene . textures ;  var   data   =   cache . get ( key );", 
            "title": "Texture atlas"
        }, 
        {
            "location": "/loader/index.html#multi-file-texture-atlas", 
            "text": "scene . load . multiatlas ( key ,   textureURLs ,   atlasURLs );", 
            "title": "Multi file texture atlas"
        }, 
        {
            "location": "/loader/index.html#unity-texture-atlas", 
            "text": "scene . load . unityAtlas ( key ,   textureURL ,   atlasURL );", 
            "title": "Unity texture atlas"
        }, 
        {
            "location": "/loader/index.html#animation", 
            "text": "scene . load . animation ( key ,   url );", 
            "title": "Animation"
        }, 
        {
            "location": "/loader/index.html#audio", 
            "text": "scene . load . audio ( key ,   urls );   Get data from cache  var   cache   =   scene . cache . audio ;  var   data   =   cache . get ( key );", 
            "title": "Audio"
        }, 
        {
            "location": "/loader/index.html#audio-sprite", 
            "text": "scene . load . audioSprite ( key ,   urls ,   json ,   config );", 
            "title": "Audio sprite"
        }, 
        {
            "location": "/loader/index.html#bitmap-font", 
            "text": "scene . load . bitmapFont ( key ,   textureURL ,   xmlURL );   Get data from cache  var   cache   =   scene . cache . bitmapFont ;  var   data   =   cache . get ( key );", 
            "title": "Bitmap font"
        }, 
        {
            "location": "/loader/index.html#tile-map", 
            "text": "scene . load . tilemapWeltmeister ( key ,   url );    // JSON  scene . load . tilemapCSV ( key ,   url );            // CSV   Get data from cache  var   cache   =   scene . cache . tilemap ;  var   data   =   cache . get ( key );", 
            "title": "Tile map"
        }, 
        {
            "location": "/loader/index.html#text", 
            "text": "scene . load . text ( key ,   url );   Get data from cache  var   cache   =   scene . cache . text ;  var   data   =   cache . get ( key );", 
            "title": "Text"
        }, 
        {
            "location": "/loader/index.html#json", 
            "text": "scene . load . json ( key ,   url );   Get data from cache  var   cache   =   scene . cache . json ;  var   data   =   cache . get ( key );", 
            "title": "JSON"
        }, 
        {
            "location": "/loader/index.html#xml", 
            "text": "scene . load . xml ( key ,   url );   Get data from cache  var   cache   =   scene . cache . xml ;  var   data   =   cache . get ( key );", 
            "title": "XML"
        }, 
        {
            "location": "/loader/index.html#script", 
            "text": "scene . load . script ( key ,   url );", 
            "title": "Script"
        }, 
        {
            "location": "/loader/index.html#glsl", 
            "text": "scene . load . glsl ( key ,   url );   Get data from cache  var   cache   =   scene . cache . shader ;  var   data   =   cache . get ( key );", 
            "title": "GLSL"
        }, 
        {
            "location": "/loader/index.html#binary", 
            "text": "scene . load . binary ( key ,   url );   Get data from cache  var   cache   =   scene . cache . binary ;  var   data   =   cache . get ( key );", 
            "title": "Binary"
        }, 
        {
            "location": "/loader/index.html#plugin", 
            "text": "scene . load . plugin ( key ,   url );", 
            "title": "Plugin"
        }, 
        {
            "location": "/loader/index.html#release-data", 
            "text": "var cache = scene.cache.text;\ncache.remove(key);", 
            "title": "Release data"
        }, 
        {
            "location": "/loader/index.html#data-in-cache", 
            "text": "var cache = scene.cache.text;\nvar hasData = cache.has(key);", 
            "title": "Data in cache"
        }, 
        {
            "location": "/webfontloader/index.html", 
            "text": "Introduction\n\n\nLoad web font by \ngoogle webfont loader\n in preload stage.\n\n\n\n\nAuthor: Rex\n\n\nCustomize File of loader\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nLoad webfont\n\n\nIn preload stage:\n\n\nthis\n.\nload\n.\nwebFont\n(\nbangers\n,\n \n{\n\n    \ngoogle\n:\n \n{\n\n        \nfamilies\n:\n \n[\nBangers\n]\n\n    \n}\n\n\n});\n\n\n\n\n\nEvents\n\n\n\n\n\n\nfontactive\n event\n\n\nthis\n.\nload\n.\non\n(\nwebfontactive\n,\n \nfunction\n(\nfileObj\n,\n \nfamilyName\n){});\n\n\n\n\n\n\n\n\n\nfontinactive\n event\n\n\nthis\n.\nload\n.\non\n(\nwebfontinactive\n,\n \nfunction\n(\nfileObj\n,\n \nfamilyName\n){});", 
            "title": "Webfont loader"
        }, 
        {
            "location": "/webfontloader/index.html#introduction", 
            "text": "Load web font by  google webfont loader  in preload stage.   Author: Rex  Customize File of loader", 
            "title": "Introduction"
        }, 
        {
            "location": "/webfontloader/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/webfontloader/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/webfontloader/index.html#load-webfont", 
            "text": "In preload stage:  this . load . webFont ( bangers ,   { \n     google :   { \n         families :   [ Bangers ] \n     }  });", 
            "title": "Load webfont"
        }, 
        {
            "location": "/webfontloader/index.html#events", 
            "text": "fontactive  event  this . load . on ( webfontactive ,   function ( fileObj ,   familyName ){});     fontinactive  event  this . load . on ( webfontinactive ,   function ( fileObj ,   familyName ){});", 
            "title": "Events"
        }, 
        {
            "location": "/gameobject/index.html", 
            "text": "Introduction\n\n\nBase class of all game object in phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nPosition\n\n\nvar\n \nx\n \n=\n \ngameobject\n.\nx\n;\n\n\nvar\n \ny\n \n=\n \ngameobject\n.\ny\n;\n\n\ngameobject\n.\nx\n \n=\n \n100\n;\n\n\ngameobject\n.\ny\n \n=\n \n100\n;\n\n\n\n\n\nAngle\n\n\nvar\n \nangle\n \n=\n \ngameobject\n.\nangle\n;\n\n\ngameobject\n.\nangle\n \n=\n \n90\n;\n\n\n\n// angle in radians\n\n\nvar\n \nrad\n \n=\n \ngameobject\n.\nrotation\n;\n\n\ngameobject\n.\nrotation\n \n=\n \nPhaser\n.\nMath\n.\nDegToRad\n(\n90\n);\n\n\n\n\n\nVisible\n\n\nvar\n \nvisible\n \n=\n \ngameobject\n.\nvisible\n;\n\n\ngameobject\n.\nvisible\n \n=\n \ntrue\n;\n\n\n\n\n\nAlpha\n\n\nvar\n \nalpha\n \n=\n \ngameobject\n.\nalpha\n;\n\n\ngameobject\n.\nalpha\n \n=\n \n0.5\n;\n\n\n\n\n\nFlipX, FlipY\n\n\nvar\n \nflipX\n \n=\n \ngameobject\n.\nflipX\n;\n\n\ngameobject\n.\nflipX\n \n=\n \nfalse\n;\n\n\n\nvar\n \nflipY\n \n=\n \ngameobject\n.\nflipY\n;\n\n\ngameobject\n.\nflipY\n \n=\n \nfalse\n;\n\n\n\n\n\nScroll factor\n\n\ngameobject\n.\nsetScrollFactor\n(\nf\n);\n\n\n\n\n\nfactor: 0~1\n\n\n\n\n0= fixed to camera\n\n\n0.25= quarter the speed of the camera\n\n\n0.5= half the speed of the camera\n\n\n\n\nEdges\n\n\nvar\n \ntopLeft\n \n=\n \ngameobject\n.\ngetTopLeft\n();\n         \n// topLeft.x, topLeft.y\n\n\nvar\n \ntopRight\n \n=\n \ngameobject\n.\ngetTopRight\n();\n       \n// topRight.x, topRight.y\n\n\nvar\n \nbottomLeft\n \n=\n \ngameobject\n.\ngetBottomLeft\n();\n   \n// bottomLeft.x, bottomLeft.y\n\n\nvar\n \nbottomRight\n \n=\n \ngameobject\n.\ngetBottomRight\n();\n \n// bottomRight.x, bottomRight.y\n\n\n\n\n\nPrivate data\n\n\ngameobject\n.\nsetData\n(\nkey\n,\n \nvalue\n);\n\n\nvar\n \nvalue\n \n=\n \ngameobject\n.\ngetData\n(\nkey\n);\n\n\n\n\n\nSee \ndata manager", 
            "title": "Game object"
        }, 
        {
            "location": "/gameobject/index.html#introduction", 
            "text": "Base class of all game object in phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/gameobject/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/gameobject/index.html#position", 
            "text": "var   x   =   gameobject . x ;  var   y   =   gameobject . y ;  gameobject . x   =   100 ;  gameobject . y   =   100 ;", 
            "title": "Position"
        }, 
        {
            "location": "/gameobject/index.html#angle", 
            "text": "var   angle   =   gameobject . angle ;  gameobject . angle   =   90 ;  // angle in radians  var   rad   =   gameobject . rotation ;  gameobject . rotation   =   Phaser . Math . DegToRad ( 90 );", 
            "title": "Angle"
        }, 
        {
            "location": "/gameobject/index.html#visible", 
            "text": "var   visible   =   gameobject . visible ;  gameobject . visible   =   true ;", 
            "title": "Visible"
        }, 
        {
            "location": "/gameobject/index.html#alpha", 
            "text": "var   alpha   =   gameobject . alpha ;  gameobject . alpha   =   0.5 ;", 
            "title": "Alpha"
        }, 
        {
            "location": "/gameobject/index.html#flipx-flipy", 
            "text": "var   flipX   =   gameobject . flipX ;  gameobject . flipX   =   false ;  var   flipY   =   gameobject . flipY ;  gameobject . flipY   =   false ;", 
            "title": "FlipX, FlipY"
        }, 
        {
            "location": "/gameobject/index.html#scroll-factor", 
            "text": "gameobject . setScrollFactor ( f );   factor: 0~1   0= fixed to camera  0.25= quarter the speed of the camera  0.5= half the speed of the camera", 
            "title": "Scroll factor"
        }, 
        {
            "location": "/gameobject/index.html#edges", 
            "text": "var   topLeft   =   gameobject . getTopLeft ();           // topLeft.x, topLeft.y  var   topRight   =   gameobject . getTopRight ();         // topRight.x, topRight.y  var   bottomLeft   =   gameobject . getBottomLeft ();     // bottomLeft.x, bottomLeft.y  var   bottomRight   =   gameobject . getBottomRight ();   // bottomRight.x, bottomRight.y", 
            "title": "Edges"
        }, 
        {
            "location": "/gameobject/index.html#private-data", 
            "text": "gameobject . setData ( key ,   value );  var   value   =   gameobject . getData ( key );   See  data manager", 
            "title": "Private data"
        }, 
        {
            "location": "/image/index.html", 
            "text": "Introduction\n\n\nDisplay of static images, built-in game object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nLoad texture\n\n\nscene\n.\nload\n.\nimage\n(\nkey\n,\n \nurl\n);\n\n\n\n\n\nSee \nloader\n\n\nAdd image object\n\n\nvar\n \nimage\n \n=\n \nscene\n.\nadd\n.\nimage\n(\nx\n,\n \ny\n,\n \nkey\n);\n\n\n\n\n\nAdd image from JSON\n\n\nvar\n \nimage\n \n=\n \nscene\n.\nmake\n.\nimage\n({\n\n    \nx\n:\n \n100\n,\n\n    \ny\n:\n \n100\n,\n\n    \nkey\n:\n \n,\n\n\n    \n// angle: 90,\n\n    \n// alpha: 0.75\n\n    \n// flipX: true,\n\n    \n// flipY: true\n\n\n});\n\n\n\n\n\nOther properties\n\n\nSee \ngame object", 
            "title": "Image"
        }, 
        {
            "location": "/image/index.html#introduction", 
            "text": "Display of static images, built-in game object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/image/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/image/index.html#load-texture", 
            "text": "scene . load . image ( key ,   url );   See  loader", 
            "title": "Load texture"
        }, 
        {
            "location": "/image/index.html#add-image-object", 
            "text": "var   image   =   scene . add . image ( x ,   y ,   key );   Add image from JSON  var   image   =   scene . make . image ({ \n     x :   100 , \n     y :   100 , \n     key :   , \n\n     // angle: 90, \n     // alpha: 0.75 \n     // flipX: true, \n     // flipY: true  });", 
            "title": "Add image object"
        }, 
        {
            "location": "/image/index.html#other-properties", 
            "text": "See  game object", 
            "title": "Other properties"
        }, 
        {
            "location": "/text/index.html", 
            "text": "Introduction\n\n\nDrawing text on canvas, built-in game object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nSnapshot\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nadd\n.\ntext\n(\nx\n,\n \ny\n,\n \nhello\n);\n\n\ntxt\n.\nsetText\n(\nworld\n);\n\n\n\n\n\nAdd text object\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nadd\n.\ntext\n(\nx\n,\n \ny\n,\n \nhello\n);\n\n\n// var txt = scene.add.text(x, y, \nhello\n, { fontFamily: \nArial\n, fontSize: 64, color: \n#00ff00\n });\n\n\n\n\n\nDefault style\n\n\n{\n\n    \nfontFamily\n:\n \nCourier\n,\n\n    \nfontSize\n:\n \n16px\n,\n\n    \nfontStyle\n:\n \n,\n\n    \nbackgroundColor\n:\n \nnull\n,\n\n    \ncolor\n:\n \n#fff\n,\n\n    \nstroke\n:\n \n#fff\n,\n\n    \nstrokeThickness\n:\n \n0\n,\n\n    \nshadow\n:\n \n{\n\n        \noffsetX\n:\n \n0\n,\n\n        \noffsetY\n:\n \n0\n,\n\n        \ncolor\n:\n \n#000\n,\n\n        \nblur\n:\n \n0\n,\n\n        \nstroke\n:\n \nfalse\n,\n\n        \nfill\n:\n \nfalse\n\n    \n},\n\n    \nalign\n:\n \nleft\n,\n  \n// align only works with multi-lined text\n\n    \nmaxLines\n:\n \n0\n,\n\n    \nfixedWidth\n:\n \n0\n,\n\n    \nfixedHeight\n:\n \n0\n,\n\n    \nrtl\n:\n \nfalse\n,\n\n    \ntestString\n:\n \n|M\u00c9qgy\n,\n\n    \nwordWrap\n:\n \n{\n\n        \nwidth\n:\n \nnull\n,\n\n        \ncallback\n:\n \nnull\n,\n\n        \ncallbackScope\n:\n \nnull\n,\n\n        \nuseAdvancedWrap\n:\n \nfalse\n\n    \n}\n\n\n}\n\n\n\n\n\nAdd text from JSON\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nmake\n.\ntext\n({\n\n    \nx\n:\n \n100\n,\n\n    \ny\n:\n \n100\n,\n\n    \npadding\n:\n \n{\n\n        \nleft\n:\n \n64\n,\n\n        \nright\n:\n \n16\n,\n\n        \ntop\n:\n \n20\n,\n\n        \nbottom\n:\n \n40\n        \n        \n//x: 32,    // 32px padding on the left/right\n\n        \n//y: 16     // 16px padding on the top/bottom\n\n    \n},\n\n    \ntext\n:\n \nText\\nGame Object\\nCreated from config\n,\n\n    \nstyle\n:\n \n{\n\n        \nfontSize\n:\n \n64px\n,\n\n        \nfontFamily\n:\n \nArial\n,\n\n        \ncolor\n:\n \n#ffffff\n,\n\n        \nalign\n:\n \ncenter\n,\n\n        \nbackgroundColor\n:\n \n#ff00ff\n\n    \n}\n\n\n});\n\n\n\n\n\nWord wrap\n\n\nWrap by width\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nmake\n.\ntext\n({\n\n    \nx\n:\n \n400\n,\n\n    \ny\n:\n \n100\n,\n\n    \ntext\n:\n \nThe sky above the port was the color of television, tuned to a dead channel.\n,\n\n    \norigin\n:\n \n{\n \nx\n:\n \n0.5\n,\n \ny\n:\n \n0.5\n \n},\n\n    \nstyle\n:\n \n{\n\n        \nfont\n:\n \nbold 25px Arial\n,\n\n        \nfill\n:\n \nwhite\n,\n\n        \nwordWrap\n:\n \n{\n \nwidth\n:\n \n300\n \n}\n\n    \n}\n\n\n});\n\n\n\n\n\nWrap by callback\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nmake\n.\ntext\n({\n\n    \nx\n:\n \n400\n,\n\n    \ny\n:\n \n300\n,\n\n    \ntext\n:\n \nThe sky above the port was the color of television, tuned to a dead channel.\n,\n\n    \norigin\n:\n \n0.5\n,\n\n    \nstyle\n:\n \n{\n\n        \nfont\n:\n \nbold 30px Arial\n,\n\n        \nfill\n:\n \nwhite\n,\n\n        \nwordWrap\n:\n \n{\n \ncallback\n:\n \nwordWrap\n,\n \nscope\n:\n \nthis\n \n}\n\n    \n}\n\n\n});\n\n\n\nfunction\n \nwordWrap\n \n(\ntext\n,\n \ntextObject\n)\n\n\n{\n\n    \n// First parameter will be the string that needs to be wrapped\n\n    \n// Second parameter will be the Text game object that is being wrapped currently\n\n\n    \n// This wrap just puts each word on a separate line, but you could inject your own\n\n    \n// language-specific logic here.\n\n    \nvar\n \nwords\n \n=\n \ntext\n.\nsplit\n(\n \n);\n\n\n    \n// You can return either an array of individual lines or a string with line breaks (e.g. \\n) in\n\n    \n// the correct place.\n\n    \nreturn\n \nwords\n;\n\n\n}\n\n\n\n\n\nSet text\n\n\ntxt\n.\nsetText\n(\nworld\n);\n\n\n// var curContent = txt.text;\n\n\n\n\n\nSet style\n\n\ntxt\n.\nsetStyle\n(\nstyle\n);\n\n\ntxt\n.\nsetFont\n(\nfont\n);\n\n\ntxt\n.\nsetFontFamily\n(\nfamily\n);\n\n\ntxt\n.\nsetFontSize\n(\nsize\n);\n\n\ntxt\n.\nsetFontStyle\n(\nstyle\n);\n\n\n\n\n\nSet color\n\n\ntxt\n.\nsetColor\n(\ncolor\n);\n\n\ntxt\n.\nsetStroke\n(\ncolor\n,\n \nthickness\n);\n\n\ntxt\n.\nsetBackgroundColor\n(\ncolor\n);\n\n\ntxt\n.\nsetFill\n(\ncolor\n);\n\n\n\n\n\nSet shadow\n\n\ntxt\n.\nsetShadow\n(\nx\n,\n \ny\n,\n \ncolor\n,\n \nblur\n,\n \nshadowStroke\n,\n \nshadowFill\n);\n\n\ntxt\n.\nsetShadowOffset\n(\nx\n,\n \ny\n);\n\n\ntxt\n.\nsetShadowColor\n(\ncolor\n);\n\n\ntxt\n.\nsetShadowBlur\n(\nblur\n);\n\n\ntxt\n.\nsetShadowStroke\n(\nenabled\n);\n\n\ntxt\n.\nsetShadowFill\n(\nenabled\n);\n\n\n\n\n\nSet padding\n\n\ntxt\n.\nsetPadding\n(\nleft\n,\n \ntop\n,\n \nright\n,\n \nbottom\n);\n\n\ntxt\n.\nsetPadding\n({});\n\n\n\n\n\nSet max lines\n\n\ntxt\n.\nsetMaxLines\n(\nmax\n);\n\n\n\n\n\nSet canvas size\n\n\ntxt\n.\nsetFixedSize\n(\nwidth\n,\n \nheight\n);", 
            "title": "Text"
        }, 
        {
            "location": "/text/index.html#introduction", 
            "text": "Drawing text on canvas, built-in game object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/text/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/text/index.html#snapshot", 
            "text": "var   txt   =   scene . add . text ( x ,   y ,   hello );  txt . setText ( world );", 
            "title": "Snapshot"
        }, 
        {
            "location": "/text/index.html#add-text-object", 
            "text": "var   txt   =   scene . add . text ( x ,   y ,   hello );  // var txt = scene.add.text(x, y,  hello , { fontFamily:  Arial , fontSize: 64, color:  #00ff00  });   Default style  { \n     fontFamily :   Courier , \n     fontSize :   16px , \n     fontStyle :   , \n     backgroundColor :   null , \n     color :   #fff , \n     stroke :   #fff , \n     strokeThickness :   0 , \n     shadow :   { \n         offsetX :   0 , \n         offsetY :   0 , \n         color :   #000 , \n         blur :   0 , \n         stroke :   false , \n         fill :   false \n     }, \n     align :   left ,    // align only works with multi-lined text \n     maxLines :   0 , \n     fixedWidth :   0 , \n     fixedHeight :   0 , \n     rtl :   false , \n     testString :   |M\u00c9qgy , \n     wordWrap :   { \n         width :   null , \n         callback :   null , \n         callbackScope :   null , \n         useAdvancedWrap :   false \n     }  }   Add text from JSON  var   txt   =   scene . make . text ({ \n     x :   100 , \n     y :   100 , \n     padding :   { \n         left :   64 , \n         right :   16 , \n         top :   20 , \n         bottom :   40         \n         //x: 32,    // 32px padding on the left/right \n         //y: 16     // 16px padding on the top/bottom \n     }, \n     text :   Text\\nGame Object\\nCreated from config , \n     style :   { \n         fontSize :   64px , \n         fontFamily :   Arial , \n         color :   #ffffff , \n         align :   center , \n         backgroundColor :   #ff00ff \n     }  });", 
            "title": "Add text object"
        }, 
        {
            "location": "/text/index.html#word-wrap", 
            "text": "Wrap by width  var   txt   =   scene . make . text ({ \n     x :   400 , \n     y :   100 , \n     text :   The sky above the port was the color of television, tuned to a dead channel. , \n     origin :   {   x :   0.5 ,   y :   0.5   }, \n     style :   { \n         font :   bold 25px Arial , \n         fill :   white , \n         wordWrap :   {   width :   300   } \n     }  });   Wrap by callback  var   txt   =   scene . make . text ({ \n     x :   400 , \n     y :   300 , \n     text :   The sky above the port was the color of television, tuned to a dead channel. , \n     origin :   0.5 , \n     style :   { \n         font :   bold 30px Arial , \n         fill :   white , \n         wordWrap :   {   callback :   wordWrap ,   scope :   this   } \n     }  });  function   wordWrap   ( text ,   textObject )  { \n     // First parameter will be the string that needs to be wrapped \n     // Second parameter will be the Text game object that is being wrapped currently \n\n     // This wrap just puts each word on a separate line, but you could inject your own \n     // language-specific logic here. \n     var   words   =   text . split (   ); \n\n     // You can return either an array of individual lines or a string with line breaks (e.g. \\n) in \n     // the correct place. \n     return   words ;  }", 
            "title": "Word wrap"
        }, 
        {
            "location": "/text/index.html#set-text", 
            "text": "txt . setText ( world );  // var curContent = txt.text;", 
            "title": "Set text"
        }, 
        {
            "location": "/text/index.html#set-style", 
            "text": "txt . setStyle ( style );  txt . setFont ( font );  txt . setFontFamily ( family );  txt . setFontSize ( size );  txt . setFontStyle ( style );", 
            "title": "Set style"
        }, 
        {
            "location": "/text/index.html#set-color", 
            "text": "txt . setColor ( color );  txt . setStroke ( color ,   thickness );  txt . setBackgroundColor ( color );  txt . setFill ( color );", 
            "title": "Set color"
        }, 
        {
            "location": "/text/index.html#set-shadow", 
            "text": "txt . setShadow ( x ,   y ,   color ,   blur ,   shadowStroke ,   shadowFill );  txt . setShadowOffset ( x ,   y );  txt . setShadowColor ( color );  txt . setShadowBlur ( blur );  txt . setShadowStroke ( enabled );  txt . setShadowFill ( enabled );", 
            "title": "Set shadow"
        }, 
        {
            "location": "/text/index.html#set-padding", 
            "text": "txt . setPadding ( left ,   top ,   right ,   bottom );  txt . setPadding ({});", 
            "title": "Set padding"
        }, 
        {
            "location": "/text/index.html#set-max-lines", 
            "text": "txt . setMaxLines ( max );", 
            "title": "Set max lines"
        }, 
        {
            "location": "/text/index.html#set-canvas-size", 
            "text": "txt . setFixedSize ( width ,   height );", 
            "title": "Set canvas size"
        }, 
        {
            "location": "/texttypingplugin/index.html", 
            "text": "Introduction\n\n\nTyping text on text object.\n\n\n\n\nAuthor: Rex\n\n\nMember of text object\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\ntxt\n.\ntyping\n \n=\n \nnew\n \nTextTypingPlugin\n(\ntxt\n,\n \n{\n\n    \n//speed: 333,       // typing speed in ms\n\n    \n//typeMode: 0,      //0|\nleft-to-right\n|1|\nright-to-left\n|2|\nmiddle-to-sides\n|3|\nsides-to-middle\n\n    \n//setTextCallback: function(text, isLastChar, insertIdx){ return text; }  // callback before set-text\n\n    \n//setTextCallbackScope: null\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\nspeed: typing speed in ms\n\n\ntypeMode :\n\n\n'left-to-right'\n, or \n0\n : typing characters from left to right.\n\n\n'right-to-left'\n, or \n1\n : typing characters from right to left.\n\n\n'middle-to-sides'\n, or \n2\n : typing characters from middle to sides, optional.\n\n\n'sides-to-middle'\n, or \n3\n : typing characters from sides to middle.    \n\n\n\n\n\n\nsetTextCallback : callback befor set-text, to decorate display text.\n    \nfunction\n(\ntext\n,\n \nisLastChar\n,\n \ninsertIdx\n)\n \n{\n \nreturn\n \ntext\n;\n \n}\n\n\n\n\nsetTextCallbackScope : scope of setTextCallback function.\n\n\n\n\nStart typing\n\n\ntxt\n.\ntyping\n.\nstart\n(\nABCDEFG\n);\n\n\n// txt.typing.start(\nABCDEFG\n, 333);  // speed in ms\n\n\n\n\n\nEvents\n\n\n\n\nOn typing :\n\n\n\n\ntxt\n.\ntyping\n.\non\n(\ntype\n,\n \nfunction\n(){});\n\n\n\n\n\n\n\nOn typing completed :\n\n\n\n\ntxt\n.\ntyping\n.\non\n(\ncomplete\n,\n \nfunction\n(){});\n\n\n\n\n\nOther commands\n\n\n\n\nIs-typing state\n\n\n\n\nvar\n \nisTyping\n \n=\n \ntxt\n.\ntyping\n.\nisTyping\n;\n\n\n\n\n\n\n\nStop typing\n\n\n\n\ntxt\n.\ntyping\n.\nstop\n();\n\n\n// txt.typing.stop(true);;  // stop and show all text\n\n\n\n\n\n\n\nPause typing\n\n\n\n\ntxt\n.\ntyping\n.\npause\n();\n\n\n\n\n\n\n\nResume typing\n\n\n\n\ntxt\n.\ntyping\n.\nresume\n();\n\n\n\n\n\n\n\nSet typing speed\n\n\n\n\ntxt\n.\ntyping\n.\nsetTypeSpeed\n(\nspeed\n);\n  \n// speed in ms\n\n\n\n\n\nSet speed in \ntyping\n event or setTextCallback to change typing speed of remaining text.\n\n\n\n\nTyping more text\n\n\n\n\ntxt\n.\ntyping\n.\nappendText\n(\ntext\n);\n\n\n\n\n\n\n\nSet typing mode\n\n\n\n\ntxt\n.\ntyping\n.\nsetTypeMode\n(\nmode\n);\n  \n//0|\nleft-to-right\n|1|\nright-to-left\n|2|\nmiddle-to-sides\n|3|\nsides-to-middle", 
            "title": "Typing"
        }, 
        {
            "location": "/texttypingplugin/index.html#introduction", 
            "text": "Typing text on text object.   Author: Rex  Member of text object", 
            "title": "Introduction"
        }, 
        {
            "location": "/texttypingplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/texttypingplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/texttypingplugin/index.html#create-instance", 
            "text": "txt . typing   =   new   TextTypingPlugin ( txt ,   { \n     //speed: 333,       // typing speed in ms \n     //typeMode: 0,      //0| left-to-right |1| right-to-left |2| middle-to-sides |3| sides-to-middle \n     //setTextCallback: function(text, isLastChar, insertIdx){ return text; }  // callback before set-text \n     //setTextCallbackScope: null  });   Properties   speed: typing speed in ms  typeMode :  'left-to-right' , or  0  : typing characters from left to right.  'right-to-left' , or  1  : typing characters from right to left.  'middle-to-sides' , or  2  : typing characters from middle to sides, optional.  'sides-to-middle' , or  3  : typing characters from sides to middle.        setTextCallback : callback befor set-text, to decorate display text.\n     function ( text ,   isLastChar ,   insertIdx )   {   return   text ;   }   setTextCallbackScope : scope of setTextCallback function.", 
            "title": "Create instance"
        }, 
        {
            "location": "/texttypingplugin/index.html#start-typing", 
            "text": "txt . typing . start ( ABCDEFG );  // txt.typing.start( ABCDEFG , 333);  // speed in ms", 
            "title": "Start typing"
        }, 
        {
            "location": "/texttypingplugin/index.html#events", 
            "text": "On typing :   txt . typing . on ( type ,   function (){});    On typing completed :   txt . typing . on ( complete ,   function (){});", 
            "title": "Events"
        }, 
        {
            "location": "/texttypingplugin/index.html#other-commands", 
            "text": "Is-typing state   var   isTyping   =   txt . typing . isTyping ;    Stop typing   txt . typing . stop ();  // txt.typing.stop(true);;  // stop and show all text    Pause typing   txt . typing . pause ();    Resume typing   txt . typing . resume ();    Set typing speed   txt . typing . setTypeSpeed ( speed );    // speed in ms   Set speed in  typing  event or setTextCallback to change typing speed of remaining text.   Typing more text   txt . typing . appendText ( text );    Set typing mode   txt . typing . setTypeMode ( mode );    //0| left-to-right |1| right-to-left |2| middle-to-sides |3| sides-to-middle", 
            "title": "Other commands"
        }, 
        {
            "location": "/textpageplugin/index.html", 
            "text": "Introduction\n\n\nDisplay text page by page on text object.\n\n\n\n\nAuthor: Rex\n\n\nMember of text object\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \nwordWrap\n \n=\n \n{\n\n    \nwidth\n:\n \n500\n\n\n};\n\n\nvar\n \ntxt\n \n=\n \nscene\n.\nadd\n.\ntext\n(\nx\n,\n \ny\n,\n \n,\n \n{\n\n    \nwordWrap\n:\n \nwordWrap\n,\n\n    \nmaxLines\n:\n \n7\n\n\n});\n\n\ntxt\n.\npage\n \n=\n \nnew\n \nTextPagePlugin\n(\ntxt\n,\n \n{\n\n    \n//text: \n,       // content in string or array\n\n    \n//wordWrap: wordWrap\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\ntext: content in string or array, optional\n\n\nwordWrap: the same as \nwordWrap\n of text style, which included\n\n\nwidth\n\n\ncallback\n\n\ncallbackScope\n\n\nuseAdvancedWrap\n\n\n\n\n\n\n\n\nWord wrap\n\n\nAssign \nwordWrap\n in page object, otherwise this page object will get wordWrap from text object.\n\n\nWordWrap properties of text objecct will be moved to page object to avoid word-wrapping again when displaying text.\n\n\nSet content\n\n\ntxt\n.\npage\n.\nsetText\n(\ntext\n);\n   \n// content in string or array\n\n\n\n\n\n\n\nAppend text\n\n\n\n\ntxt\n.\npage\n.\nappendText\n(\ntext\n);\n \n// content in string or array\n\n\n\n\n\nShow page\n\n\ntxt\n.\npage\n.\nshowPage\n();\n         \n// display current page\n\n\ntxt\n.\npage\n.\nshowNextPage\n();\n     \n// display next page\n\n\ntxt\n.\npage\n.\nshowPreviousPage\n();\n \n// display previous page\n\n\n\n\n\nInitial page index is \n-1\n, so user could call \ntxt.page.showNextPage()\n to display first page.\n\n\nGet lines of page\n\n\nvar\n \nlines\n \n=\n \ntxt\n.\npage\n.\ngetPage\n();\n         \n// get lines of current page\n\n\nvar\n \nlines\n \n=\n \ntxt\n.\npage\n.\ngetNextPage\n();\n     \n// get lines of next page\n\n\nvar\n \nlines\n \n=\n \ntxt\n.\npage\n.\ngetPreviousPage\n();\n \n// get lines of previous page\n\n\n\n\n\nOther properties\n\n\n\n\nCurrent page index : \ntxt.page.pageIdx\n\n\nNumber of pages : \ntxt.page.pageNum\n\n\nIs last page: \ntxt.page.isLastPage\n\n\nIs first page: \ntxt.page.isFirstPage\n\n\n\n\nSet wordWrap properties\n\n\n\n\nWidth: \ntxt.page.setWordWrapWidth(width)\n\n\nCallback: \ntxt.page.setWordWrapCallback(callback, callbackScope)\n\n\nUseAdvanced: \ntxt.page.setWordWrapUseAdvanced(true)", 
            "title": "Page"
        }, 
        {
            "location": "/textpageplugin/index.html#introduction", 
            "text": "Display text page by page on text object.   Author: Rex  Member of text object", 
            "title": "Introduction"
        }, 
        {
            "location": "/textpageplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/textpageplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/textpageplugin/index.html#create-instance", 
            "text": "var   wordWrap   =   { \n     width :   500  };  var   txt   =   scene . add . text ( x ,   y ,   ,   { \n     wordWrap :   wordWrap , \n     maxLines :   7  });  txt . page   =   new   TextPagePlugin ( txt ,   { \n     //text:  ,       // content in string or array \n     //wordWrap: wordWrap  });   Properties   text: content in string or array, optional  wordWrap: the same as  wordWrap  of text style, which included  width  callback  callbackScope  useAdvancedWrap", 
            "title": "Create instance"
        }, 
        {
            "location": "/textpageplugin/index.html#word-wrap", 
            "text": "Assign  wordWrap  in page object, otherwise this page object will get wordWrap from text object.  WordWrap properties of text objecct will be moved to page object to avoid word-wrapping again when displaying text.", 
            "title": "Word wrap"
        }, 
        {
            "location": "/textpageplugin/index.html#set-content", 
            "text": "txt . page . setText ( text );     // content in string or array    Append text   txt . page . appendText ( text );   // content in string or array", 
            "title": "Set content"
        }, 
        {
            "location": "/textpageplugin/index.html#show-page", 
            "text": "txt . page . showPage ();           // display current page  txt . page . showNextPage ();       // display next page  txt . page . showPreviousPage ();   // display previous page   Initial page index is  -1 , so user could call  txt.page.showNextPage()  to display first page.", 
            "title": "Show page"
        }, 
        {
            "location": "/textpageplugin/index.html#get-lines-of-page", 
            "text": "var   lines   =   txt . page . getPage ();           // get lines of current page  var   lines   =   txt . page . getNextPage ();       // get lines of next page  var   lines   =   txt . page . getPreviousPage ();   // get lines of previous page", 
            "title": "Get lines of page"
        }, 
        {
            "location": "/textpageplugin/index.html#other-properties", 
            "text": "Current page index :  txt.page.pageIdx  Number of pages :  txt.page.pageNum  Is last page:  txt.page.isLastPage  Is first page:  txt.page.isFirstPage", 
            "title": "Other properties"
        }, 
        {
            "location": "/textpageplugin/index.html#set-wordwrap-properties", 
            "text": "Width:  txt.page.setWordWrapWidth(width)  Callback:  txt.page.setWordWrapCallback(callback, callbackScope)  UseAdvanced:  txt.page.setWordWrapUseAdvanced(true)", 
            "title": "Set wordWrap properties"
        }, 
        {
            "location": "/graphics/index.html", 
            "text": "Introduction\n\n\nDrawing on webgl or canvas, built-in game object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nAdd graphics object\n\n\nvar\n \ngraphics\n \n=\n \nscene\n.\nadd\n.\ngraphics\n();\n\n\n// var graphics = scene.add.graphics(x, y);\n\n\n\n\n\nDrawing commands\n\n\nSet style\n\n\n\n\n\n\nSet line style and fill style\n\n\ngraphics\n.\nsetDefaultStyles\n({\n\n    \nlineStyle\n:\n \n{\n\n        \nwidth\n:\n \n1\n,\n\n        \ncolor\n:\n \n0xffffff\n,\n\n        \nalpha\n:\n \n1\n\n    \n},\n\n    \nfillStyle\n:\n \n{\n\n        \ncolor\n:\n \n0xffffff\n,\n\n        \nalpha\n:\n \n1\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\nSet line style\n\n\ngraphics\n.\nlineStyle\n(\nlineWidth\n,\n \ncolor\n,\n \nalpha\n);\n   \n// color: 0xRRGGBB\n\n\n\n\n\n\n\n\n\nSet fill style\n\n\ngraphics\n.\nfillStyle\n(\ncolor\n,\n \nalpha\n);\n   \n// color: 0xRRGGBB\n\n\n\n\n\n\n\n\n\nClear\n\n\ngraphics\n.\nclear\n();\n\n\n\n\n\nPath\n\n\ngraphics\n.\nbeginPath\n();\n\n\ngraphics\n.\nclosePath\n();\n\n\ngraphics\n.\nfillPath\n();\n\n\ngraphics\n.\nstrokePath\n();\n\n\n\n\n\nRectangle\n\n\ngraphics\n.\nfillRectShape\n(\nrect\n);\n \n// rect: {x, y, width, height}\n\n\ngraphics\n.\nfillRect\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n);\n\n\ngraphics\n.\nstrokeRectShape\n(\nrect\n);\n  \n// rect: {x, y, width, height}\n\n\ngraphics\n.\nstrokeRect\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n);\n\n\n\n\n\nTriangle\n\n\ngraphics\n.\nfillTriangleShape\n(\ntriangle\n);\n \n// triangle: {x1, y1, x2, y2, x3, y3}\n\n\ngraphics\n.\nfillTriangle\n(\nx1\n,\n \ny1\n,\n \nx2\n,\n \ny2\n,\n \nx3\n,\n \ny3\n);\n\n\ngraphics\n.\nstrokeTriangleShape\n(\ntriangle\n);\n \n// triangle: {x1, y1, x2, y2, x3, y3}\n\n\ngraphics\n.\nstrokeTriangle\n(\nx1\n,\n \ny1\n,\n \nx2\n,\n \ny2\n,\n \nx3\n,\n \ny3\n);\n\n\n\n\n\nPoint\n\n\ngraphics\n.\nfillPointShape\n(\npoint\n,\n \nsize\n);\n \n// point: {x, y}\n\n\ngraphics\n.\nfillPoint\n(\nx\n,\n \ny\n,\n \nsize\n);\n\n\n\n\n\nLine\n\n\ngraphics\n.\nstrokeLineShape\n(\nline\n);\n \n// point: {x1, y1, x2, y2}\n\n\ngraphics\n.\nlineBetween\n(\nx1\n,\n \ny1\n,\n \nx2\n,\n \ny2\n);\n\n\ngraphics\n.\nlineTo\n(\nx\n,\n \ny\n);\n\n\ngraphics\n.\nmoveTo\n(\nx\n,\n \ny\n);\n\n\ngraphics\n.\nlineFxTo\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nrgb\n);\n  \n// gradient width and color\n\n\ngraphics\n.\nmoveFxTo\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nrgb\n);\n  \n// gradient width and color\n\n\n\n\n\n\n\ngraphics.lineFxTo\n is equal to \ngraphics.lineTo\n in CANVAS render mode\n\n\ngraphics.moveFxTo\n is equal to \ngraphics.moveTo\n in CANVAS render mode\n\n\n\n\nLines\n\n\ngraphics\n.\nstrokePoints\n(\npoints\n,\n \nautoClose\n,\n \nendIndex\n);\n  \n// points: [{x, y}, ...]\n\n\ngraphics\n.\nfillPoints\n(\npoints\n,\n \nautoClose\n,\n \nendIndex\n);\n  \n// points: [{x, y}, ...]\n\n\n\n\n\nCircle\n\n\ngraphics\n.\nfillCircleShape\n(\ncircle\n);\n \n// circle: {x, y, radius}\n\n\ngraphics\n.\nfillCircle\n(\nx\n,\n \ny\n,\n \nradius\n);\n\n\ngraphics\n.\nstrokeCircleShape\n(\ncircle\n);\n  \n// circle: {x, y, radius}\n\n\ngraphics\n.\nfillCircle\n(\nx\n,\n \ny\n,\n \nradius\n);\n\n\ngraphics\n.\narc\n(\nx\n,\n \ny\n,\n \nradius\n,\n \nstartAngle\n,\n \nendAngle\n,\n \nanticlockwise\n);\n\n\n\n\n\nDraw or fill circle shape by points.\n\n\nEllipse\n\n\ngraphics\n.\nstrokeEllipseShape\n(\nellipse\n,\n \nsmoothness\n);\n   \n// ellipse: Phaser.Geom.Ellipse\n\n\ngraphics\n.\nstrokeEllipse\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n,\n \nsmoothness\n);\n\n\ngraphics\n.\nfillEllipseShape\n(\nellipse\n,\n \nsmoothness\n);\n    \n// ellipse: Phaser.Geom.Ellipse\n\n\ngraphics\n.\nfillEllipse\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n,\n \nsmoothness\n);\n\n\n\n\n\nDraw or fill ellipse shape by points.\n\n\nTransfer\n\n\ngraphics\n.\nsave\n();\n\n\ngraphics\n.\nrestore\n();\n\n\ngraphics\n.\ntranslate\n(\nx\n,\n \ny\n);\n\n\ngraphics\n.\nscale\n(\nx\n,\n \ny\n);\n\n\ngraphics\n.\nrotate\n(\nradians\n);\n\n\n\n\n\nGenerate texture\n\n\ngraphics\n.\ngenerateTexture\n(\nkey\n,\n \nwidth\n,\n \nheight\n);\n  \n// key: texture key", 
            "title": "Graphics"
        }, 
        {
            "location": "/graphics/index.html#introduction", 
            "text": "Drawing on webgl or canvas, built-in game object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/graphics/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/graphics/index.html#add-graphics-object", 
            "text": "var   graphics   =   scene . add . graphics ();  // var graphics = scene.add.graphics(x, y);", 
            "title": "Add graphics object"
        }, 
        {
            "location": "/graphics/index.html#drawing-commands", 
            "text": "", 
            "title": "Drawing commands"
        }, 
        {
            "location": "/graphics/index.html#set-style", 
            "text": "Set line style and fill style  graphics . setDefaultStyles ({ \n     lineStyle :   { \n         width :   1 , \n         color :   0xffffff , \n         alpha :   1 \n     }, \n     fillStyle :   { \n         color :   0xffffff , \n         alpha :   1 \n     }  });     Set line style  graphics . lineStyle ( lineWidth ,   color ,   alpha );     // color: 0xRRGGBB     Set fill style  graphics . fillStyle ( color ,   alpha );     // color: 0xRRGGBB", 
            "title": "Set style"
        }, 
        {
            "location": "/graphics/index.html#clear", 
            "text": "graphics . clear ();", 
            "title": "Clear"
        }, 
        {
            "location": "/graphics/index.html#path", 
            "text": "graphics . beginPath ();  graphics . closePath ();  graphics . fillPath ();  graphics . strokePath ();", 
            "title": "Path"
        }, 
        {
            "location": "/graphics/index.html#rectangle", 
            "text": "graphics . fillRectShape ( rect );   // rect: {x, y, width, height}  graphics . fillRect ( x ,   y ,   width ,   height );  graphics . strokeRectShape ( rect );    // rect: {x, y, width, height}  graphics . strokeRect ( x ,   y ,   width ,   height );", 
            "title": "Rectangle"
        }, 
        {
            "location": "/graphics/index.html#triangle", 
            "text": "graphics . fillTriangleShape ( triangle );   // triangle: {x1, y1, x2, y2, x3, y3}  graphics . fillTriangle ( x1 ,   y1 ,   x2 ,   y2 ,   x3 ,   y3 );  graphics . strokeTriangleShape ( triangle );   // triangle: {x1, y1, x2, y2, x3, y3}  graphics . strokeTriangle ( x1 ,   y1 ,   x2 ,   y2 ,   x3 ,   y3 );", 
            "title": "Triangle"
        }, 
        {
            "location": "/graphics/index.html#point", 
            "text": "graphics . fillPointShape ( point ,   size );   // point: {x, y}  graphics . fillPoint ( x ,   y ,   size );", 
            "title": "Point"
        }, 
        {
            "location": "/graphics/index.html#line", 
            "text": "graphics . strokeLineShape ( line );   // point: {x1, y1, x2, y2}  graphics . lineBetween ( x1 ,   y1 ,   x2 ,   y2 );  graphics . lineTo ( x ,   y );  graphics . moveTo ( x ,   y );  graphics . lineFxTo ( x ,   y ,   width ,   rgb );    // gradient width and color  graphics . moveFxTo ( x ,   y ,   width ,   rgb );    // gradient width and color    graphics.lineFxTo  is equal to  graphics.lineTo  in CANVAS render mode  graphics.moveFxTo  is equal to  graphics.moveTo  in CANVAS render mode", 
            "title": "Line"
        }, 
        {
            "location": "/graphics/index.html#lines", 
            "text": "graphics . strokePoints ( points ,   autoClose ,   endIndex );    // points: [{x, y}, ...]  graphics . fillPoints ( points ,   autoClose ,   endIndex );    // points: [{x, y}, ...]", 
            "title": "Lines"
        }, 
        {
            "location": "/graphics/index.html#circle", 
            "text": "graphics . fillCircleShape ( circle );   // circle: {x, y, radius}  graphics . fillCircle ( x ,   y ,   radius );  graphics . strokeCircleShape ( circle );    // circle: {x, y, radius}  graphics . fillCircle ( x ,   y ,   radius );  graphics . arc ( x ,   y ,   radius ,   startAngle ,   endAngle ,   anticlockwise );   Draw or fill circle shape by points.", 
            "title": "Circle"
        }, 
        {
            "location": "/graphics/index.html#ellipse", 
            "text": "graphics . strokeEllipseShape ( ellipse ,   smoothness );     // ellipse: Phaser.Geom.Ellipse  graphics . strokeEllipse ( x ,   y ,   width ,   height ,   smoothness );  graphics . fillEllipseShape ( ellipse ,   smoothness );      // ellipse: Phaser.Geom.Ellipse  graphics . fillEllipse ( x ,   y ,   width ,   height ,   smoothness );   Draw or fill ellipse shape by points.", 
            "title": "Ellipse"
        }, 
        {
            "location": "/graphics/index.html#transfer", 
            "text": "graphics . save ();  graphics . restore ();  graphics . translate ( x ,   y );  graphics . scale ( x ,   y );  graphics . rotate ( radians );", 
            "title": "Transfer"
        }, 
        {
            "location": "/graphics/index.html#generate-texture", 
            "text": "graphics . generateTexture ( key ,   width ,   height );    // key: texture key", 
            "title": "Generate texture"
        }, 
        {
            "location": "/canvas/index.html", 
            "text": "Introduction\n\n\nDrawing on \ncanvas\n.\n\n\n\n\nAuthor: Rex\n\n\nA kind of game object\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \ncanvas\n \n=\n \nscene\n.\nadd\n.\nrexCanvas\n(\nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n);\n\n\n\n\n\nAdd canvas from JSON\n\n\nvar\n \nimage\n \n=\n \nscene\n.\nmake\n.\nrexCanvas\n({\n\n    \nx\n:\n \n0\n,\n\n    \ny\n:\n \n0\n,\n\n    \nwidth\n:\n \n256\n,\n\n    \nheight\n:\n \n256\n,\n\n\n    \n//fill: null\n\n\n});\n\n\n\n\n\nClear or fill canvas\n\n\n\n\n\n\nClear\n\n\ncanvas\n.\nclear\n();\n\n\n\n\n\n\n\n\n\nFill color\n\n\ncanvas\n.\nfill\n(\ncolor\n);\n\n\n\n\n\n\n\n\n\nGet canvas elemet\n\n\nvar\n \ncanvasElem\n \n=\n \ncanvas\n.\ngetCanvas\n();\n\n\n// var context = canvasElem.getContext(\n2d\n);\n\n\n// Drawing on context\n\n\n\n\n\nUpdate display texture\n\n\ncanvas\n.\nneedRedraw\n();\n\n\n\n\n\nLoad or save texture\n\n\n\n\n\n\nSave canvas to texuture\n\n\ncanvas\n.\ngenerateTexture\n(\nkey\n,\n \nx\n,\n \ny\n,\n \nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\n\nCopy canvas from texture\n\n\ncanvas\n.\nloadTexture\n(\nkey\n,\n \nresize\n);\n\n\n\n\n\n\n\n\n\nCompare with \nGraphics object\n\n\n\n\n\n\nDrawing method\n\n\n\n\nThis canvas object draws stuff on canvas in WEBGL or CANVAS render mode.  \n\n\nGraphics object draws stuff on webgl render pipeline n WEBGL render mode.\n\n\n\n\n\n\n\n\nSize\n\n\n\n\nThis canvas object has size (width, height) and origin.  \n\n\nGraphics object does not have size and origin.", 
            "title": "Canvas"
        }, 
        {
            "location": "/canvas/index.html#introduction", 
            "text": "Drawing on  canvas .   Author: Rex  A kind of game object", 
            "title": "Introduction"
        }, 
        {
            "location": "/canvas/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/canvas/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/canvas/index.html#create-instance", 
            "text": "var   canvas   =   scene . add . rexCanvas ( x ,   y ,   width ,   height );   Add canvas from JSON  var   image   =   scene . make . rexCanvas ({ \n     x :   0 , \n     y :   0 , \n     width :   256 , \n     height :   256 , \n\n     //fill: null  });", 
            "title": "Create instance"
        }, 
        {
            "location": "/canvas/index.html#clear-or-fill-canvas", 
            "text": "Clear  canvas . clear ();     Fill color  canvas . fill ( color );", 
            "title": "Clear or fill canvas"
        }, 
        {
            "location": "/canvas/index.html#get-canvas-elemet", 
            "text": "var   canvasElem   =   canvas . getCanvas ();  // var context = canvasElem.getContext( 2d );  // Drawing on context", 
            "title": "Get canvas elemet"
        }, 
        {
            "location": "/canvas/index.html#update-display-texture", 
            "text": "canvas . needRedraw ();", 
            "title": "Update display texture"
        }, 
        {
            "location": "/canvas/index.html#load-or-save-texture", 
            "text": "Save canvas to texuture  canvas . generateTexture ( key ,   x ,   y ,   width ,   height );     Copy canvas from texture  canvas . loadTexture ( key ,   resize );", 
            "title": "Load or save texture"
        }, 
        {
            "location": "/canvas/index.html#compare-with-graphics-object", 
            "text": "Drawing method   This canvas object draws stuff on canvas in WEBGL or CANVAS render mode.    Graphics object draws stuff on webgl render pipeline n WEBGL render mode.     Size   This canvas object has size (width, height) and origin.    Graphics object does not have size and origin.", 
            "title": "Compare with Graphics object"
        }, 
        {
            "location": "/group/index.html", 
            "text": "Introduction\n\n\nContainer of game objects, built-in game object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nAdd group object\n\n\nvar\n \ngroup\n \n=\n \nscene\n.\nadd\n.\ngroup\n(\nconfig\n);\n\n\n// var group = scene.add.group(gameobjects, config);  // add game objects into group\n\n\n\n\n\nConfiguration\n\n\n{\n\n    \nclassType\n:\n \nPhaser\n.\nGameObjects\n.\nSprite\n,\n\n    \ndefaultKey\n:\n \nnull\n,\n\n    \ndefaultFrame\n:\n \nnull\n,\n\n    \nmaxSize\n:\n \n-\n1\n,\n\n    \nrunChildUpdate\n:\n \nfalse\n    \n// run gameobject.update() if true\n\n\n}\n\n\n\n\n\nAdd game object\n\n\ngroup\n.\nadd\n(\ngameobject\n);\n\n\n// group.add(gameobject, true);  // add this game object to display and update list of scene\n\n\n\n\n\ngroup\n.\naddMultiple\n(\ngameobjects\n);\n   \n// array of game objects\n\n\n// group.addMultiple(gameobjects, true);\n\n\n\n\n\nGame object will only be added once.\n\n\nRemove game object\n\n\ngroup\n.\nremove\n(\ngameobject\n);\n\n\n// group.remove(gameobject, true);  // also remove this game object from display and update list of scene\n\n\n\n\n\nRemove all game objects\n\n\ngroup\n.\nclear\n();\n\n\n// group.clear(true);  // also remove this game object from display and update list of scene\n\n\n\n\n\nGet game objects\n\n\nvar\n \ngameobjects\n \n=\n \ngroup\n.\ngetChildren\n();\n  \n// array of game objects\n\n\n\n\n\n\n\n\n\nAmount of game objects.\n\n\nvar\n \nlen\n \n=\n \ngroup\n.\ngetLength\n();\n\n\n\n\n\n\n\n\n\nGroup is full. Maximun size is set in \nmaxSize\n.\n\n\nvar\n \nisFull\n \n=\n \ngroup\n.\nisFull\n();\n\n\n\n\n\n\n\n\n\nGame object is in group.\n\n\nvar\n \nisInGroup\n \n=\n \ngroup\n.\ncontains\n();\n\n\n\n\n\n\n\n\n\nGroup actions\n\n\ngroup\n.\nplayAnimation\n(\nkey\n,\n \nstartFrame\n);\n\n\ngroup\n.\ntoggleVisible\n();\n\n\ngroup\n.\nsetDepth\n(\nvalue\n,\n \nstep\n);\n\n\n\n\n\nActive/inactive game objects\n\n\nAmount of active/inactive game objects\n\n\nvar\n \nactiveCount\n \n=\n \ngroup\n.\ncountActive\n();\n\n\n// var inactiveCount = group.countActive(false);  // get amount of inactive game objects\n\n\n\n\n\nvar\n \nactiveCount\n \n=\n \ngroup\n.\ngetTotalUsed\n();\n        \n// equal to group.countActive()\n\n\nvar\n \nfreeCount\n \n=\n \ngroup\n.\ngetTotalFree\n();\n          \n// group.maxSize - group.getTotalUsed()\n\n\n\n\n\ngroup\n.\nkill\n(\ngameobject\n);\n         \n// gameobject.setActive(false)\n\n\ngroup\n.\nkillAndHide\n(\ngameobject\n);\n  \n// gameObject.setActive(false).setVisible(false)\n\n\n\n\n\nGet first active/inactive game object, create one if \ncreateIfNull\n is \ntrue\n\n\nvar\n \ngameobject\n \n=\n \ngroup\n.\ngetFirst\n(\nactive\n,\n \ncreateIfNull\n,\n \nx\n,\n \ny\n,\n \nkey\n,\n \nframe\n,\n \nvisible\n);\n  \n// active = true/false\n\n\nvar\n \ngameobject\n \n=\n \ngroup\n.\ngetFirstAlive\n(\ncreateIfNull\n,\n \nx\n,\n \ny\n,\n \nkey\n,\n \nframe\n,\n \nvisible\n);\n \n// equal to group.getFirst(true, ...)\n\n\nvar\n \ngameobject\n \n=\n \ngroup\n.\ngetFirstDead\n(\ncreateIfNull\n,\n \nx\n,\n \ny\n,\n \nkey\n,\n \nframe\n,\n \nvisible\n);\n \n// equal to group.getFirst(false, ...)\n\n\nvar\n \ngameobject\n \n=\n \ngroup\n.\nget\n(\nx\n,\n \ny\n,\n \nkey\n,\n \nframe\n,\n \nvisible\n);\n \n// equal to group.getFirst(false, true, ...)\n\n\n\n\n\nCreate game objects\n\n\nvar\n \ngameobjects\n \n=\n \ngroup\n.\ncreateFromConfig\n(\nconfig\n);\n\n\nvar\n \ngameobjects\n \n=\n \ngroup\n.\ncreateMultiple\n(\nconfig\n);\n    \n// config in array\n\n\n\n\n\nConfiguration\n\n\n{\n\n    \nclassType\n:\n \nthis\n.\nclassType\n,\n\n    \nkey\n:\n \nundefined\n,\n             \n// required\n\n    \nframe\n:\n \nnull\n,\n\n    \nvisible\n:\n \ntrue\n,\n\n    \nactive\n:\n \ntrue\n,\n\n    \nrepeat\n:\n \n0\n,\n                  \n// create (1 + repeat) game objects\n\n\n    \nsetXY\n:\n \n{\n\n        \nx\n:\n0\n,\n\n        \ny\n:\n0\n,\n\n        \nstepX\n:\n0\n,\n\n        \nstepY\n:\n0\n\n    \n},\n\n    \n// Actions.SetXY(gameobjects, x, y, stepX, stepY)\n\n\n    \nsetRotation\n:\n \n{\n\n        \nvalue\n:\n \n0\n,\n\n        \nstep\n:\n\n    \n},\n\n    \n// Actions.SetRotation(gameobjects, value, step)\n\n\n    \nsetScale\n:\n \n{\n\n        \nx\n:\n0\n,\n\n        \ny\n:\n0\n,\n\n        \nstepX\n:\n0\n,\n\n        \nstepY\n:\n0\n\n    \n},\n\n    \n// Actions.SetScale(gameobjects, x, y, stepX, stepY)\n\n\n    \nsetAlpha\n:\n \n{\n\n        \nvalue\n:\n \n0\n,\n\n        \nstep\n:\n\n    \n},\n\n    \n// Actions.SetAlpha(gameobjects, value, step)\n\n\n    \nhitArea\n:\n \nnull\n,\n\n    \nhitAreaCallback\n:\n \nnull\n,\n\n    \n// Actions.SetHitArea(gameobjects, hitArea, hitAreaCallback);\n\n\n    \ngridAlign\n:\n \nfalse\n\n    \n// {\n\n    \n//     width: -1,\n\n    \n//     height: -1,\n\n    \n//     cellWidth: 1,\n\n    \n//     cellHeight: 1,\n\n    \n//     position: Phaser.Display.Align.TOP_LEFT,\n\n    \n//     x: 0,\n\n    \n//     y: 0\n\n    \n// }\n\n\n}", 
            "title": "Group"
        }, 
        {
            "location": "/group/index.html#introduction", 
            "text": "Container of game objects, built-in game object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/group/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/group/index.html#add-group-object", 
            "text": "var   group   =   scene . add . group ( config );  // var group = scene.add.group(gameobjects, config);  // add game objects into group", 
            "title": "Add group object"
        }, 
        {
            "location": "/group/index.html#configuration", 
            "text": "{ \n     classType :   Phaser . GameObjects . Sprite , \n     defaultKey :   null , \n     defaultFrame :   null , \n     maxSize :   - 1 , \n     runChildUpdate :   false      // run gameobject.update() if true  }", 
            "title": "Configuration"
        }, 
        {
            "location": "/group/index.html#add-game-object", 
            "text": "group . add ( gameobject );  // group.add(gameobject, true);  // add this game object to display and update list of scene   group . addMultiple ( gameobjects );     // array of game objects  // group.addMultiple(gameobjects, true);   Game object will only be added once.", 
            "title": "Add game object"
        }, 
        {
            "location": "/group/index.html#remove-game-object", 
            "text": "group . remove ( gameobject );  // group.remove(gameobject, true);  // also remove this game object from display and update list of scene   Remove all game objects  group . clear ();  // group.clear(true);  // also remove this game object from display and update list of scene", 
            "title": "Remove game object"
        }, 
        {
            "location": "/group/index.html#get-game-objects", 
            "text": "var   gameobjects   =   group . getChildren ();    // array of game objects     Amount of game objects.  var   len   =   group . getLength ();     Group is full. Maximun size is set in  maxSize .  var   isFull   =   group . isFull ();     Game object is in group.  var   isInGroup   =   group . contains ();", 
            "title": "Get game objects"
        }, 
        {
            "location": "/group/index.html#group-actions", 
            "text": "group . playAnimation ( key ,   startFrame );  group . toggleVisible ();  group . setDepth ( value ,   step );", 
            "title": "Group actions"
        }, 
        {
            "location": "/group/index.html#activeinactive-game-objects", 
            "text": "Amount of active/inactive game objects  var   activeCount   =   group . countActive ();  // var inactiveCount = group.countActive(false);  // get amount of inactive game objects   var   activeCount   =   group . getTotalUsed ();          // equal to group.countActive()  var   freeCount   =   group . getTotalFree ();            // group.maxSize - group.getTotalUsed()   group . kill ( gameobject );           // gameobject.setActive(false)  group . killAndHide ( gameobject );    // gameObject.setActive(false).setVisible(false)   Get first active/inactive game object, create one if  createIfNull  is  true  var   gameobject   =   group . getFirst ( active ,   createIfNull ,   x ,   y ,   key ,   frame ,   visible );    // active = true/false  var   gameobject   =   group . getFirstAlive ( createIfNull ,   x ,   y ,   key ,   frame ,   visible );   // equal to group.getFirst(true, ...)  var   gameobject   =   group . getFirstDead ( createIfNull ,   x ,   y ,   key ,   frame ,   visible );   // equal to group.getFirst(false, ...)  var   gameobject   =   group . get ( x ,   y ,   key ,   frame ,   visible );   // equal to group.getFirst(false, true, ...)", 
            "title": "Active/inactive game objects"
        }, 
        {
            "location": "/group/index.html#create-game-objects", 
            "text": "var   gameobjects   =   group . createFromConfig ( config );  var   gameobjects   =   group . createMultiple ( config );      // config in array", 
            "title": "Create game objects"
        }, 
        {
            "location": "/group/index.html#configuration_1", 
            "text": "{ \n     classType :   this . classType , \n     key :   undefined ,               // required \n     frame :   null , \n     visible :   true , \n     active :   true , \n     repeat :   0 ,                    // create (1 + repeat) game objects \n\n     setXY :   { \n         x : 0 , \n         y : 0 , \n         stepX : 0 , \n         stepY : 0 \n     }, \n     // Actions.SetXY(gameobjects, x, y, stepX, stepY) \n\n     setRotation :   { \n         value :   0 , \n         step : \n     }, \n     // Actions.SetRotation(gameobjects, value, step) \n\n     setScale :   { \n         x : 0 , \n         y : 0 , \n         stepX : 0 , \n         stepY : 0 \n     }, \n     // Actions.SetScale(gameobjects, x, y, stepX, stepY) \n\n     setAlpha :   { \n         value :   0 , \n         step : \n     }, \n     // Actions.SetAlpha(gameobjects, value, step) \n\n     hitArea :   null , \n     hitAreaCallback :   null , \n     // Actions.SetHitArea(gameobjects, hitArea, hitAreaCallback); \n\n     gridAlign :   false \n     // { \n     //     width: -1, \n     //     height: -1, \n     //     cellWidth: 1, \n     //     cellHeight: 1, \n     //     position: Phaser.Display.Align.TOP_LEFT, \n     //     x: 0, \n     //     y: 0 \n     // }  }", 
            "title": "Configuration"
        }, 
        {
            "location": "/date/index.html", 
            "text": "Introduction\n\n\nGet current date or unix-timestamp.\n\n\n\n\nAuthor: Built-in javascript function\n\n\n\n\nUsage\n\n\nReference\n\n\nCreate instance\n\n\nvar\n \nd\n \n=\n \nnew\n \nDate\n();\n\n\nvar\n \nd\n \n=\n \nnew\n \nDate\n(\ntimestamp\n);\n\n\nvar\n \nd\n \n=\n \nnew\n \nDate\n(\ndateString\n);\n\n\nvar\n \nd\n \n=\n \nnew\n \nDate\n(\nyear\n,\n \nmonth\n,\n \nday\n,\n \nhours\n,\n \nminutes\n,\n \nseconds\n,\n \nmilliseconds\n);\n\n\n\n\n\nGet date\n\n\nvar\n \nyear\n \n=\n \nd\n.\ngetFullYear\n();\n    \n// returns the year\n\n\nvar\n \nmonth\n \n=\n \nd\n.\ngetMonth\n();\n      \n// returns the month (0-11)\n\n\nvar\n \ndate\n \n=\n \nd\n.\ngetDate\n();\n        \n// returns the day of the month (1-31)\n\n\nvar\n \nday\n \n=\n \nd\n.\ngetDay\n();\n          \n// returns the day of the week\n\n\nvar\n \nhour\n \n=\n \nd\n.\ngetHours\n();\n       \n// returns the hour (0-23)\n\n\nvar\n \nmin\n \n=\n \nd\n.\ngetMinutes\n();\n      \n// returns the minutes (0-59)\n\n\nvar\n \nsec\n \n=\n \nd\n.\ngetSeconds\n();\n      \n// returns the seconds (0-59)\n\n\nvar\n \nms\n \n=\n \nd\n.\ngetMilliseconds\n();\n  \n// returns the milliseconds (0-999)\n\n\n\n\n\nGet unix-timestamp\n\n\nvar\n \ntimestamp\n \n=\n \nd\n.\nnow\n();\n       \n// unix-timestamp in milliseconds\n\n\n\n\n\nTo string\n\n\nvar\n \ns\n \n=\n \nd\n.\ntoLocaleString\n();\n   \n// locale conventions\n\n\nvar\n \niso\n \n=\n \nd\n.\ntoISOString\n();\n    \n// ISO standard", 
            "title": "Date"
        }, 
        {
            "location": "/date/index.html#introduction", 
            "text": "Get current date or unix-timestamp.   Author: Built-in javascript function", 
            "title": "Introduction"
        }, 
        {
            "location": "/date/index.html#usage", 
            "text": "Reference", 
            "title": "Usage"
        }, 
        {
            "location": "/date/index.html#create-instance", 
            "text": "var   d   =   new   Date ();  var   d   =   new   Date ( timestamp );  var   d   =   new   Date ( dateString );  var   d   =   new   Date ( year ,   month ,   day ,   hours ,   minutes ,   seconds ,   milliseconds );", 
            "title": "Create instance"
        }, 
        {
            "location": "/date/index.html#get-date", 
            "text": "var   year   =   d . getFullYear ();      // returns the year  var   month   =   d . getMonth ();        // returns the month (0-11)  var   date   =   d . getDate ();          // returns the day of the month (1-31)  var   day   =   d . getDay ();            // returns the day of the week  var   hour   =   d . getHours ();         // returns the hour (0-23)  var   min   =   d . getMinutes ();        // returns the minutes (0-59)  var   sec   =   d . getSeconds ();        // returns the seconds (0-59)  var   ms   =   d . getMilliseconds ();    // returns the milliseconds (0-999)", 
            "title": "Get date"
        }, 
        {
            "location": "/date/index.html#get-unix-timestamp", 
            "text": "var   timestamp   =   d . now ();         // unix-timestamp in milliseconds", 
            "title": "Get unix-timestamp"
        }, 
        {
            "location": "/date/index.html#to-string", 
            "text": "var   s   =   d . toLocaleString ();     // locale conventions  var   iso   =   d . toISOString ();      // ISO standard", 
            "title": "To string"
        }, 
        {
            "location": "/timer/index.html", 
            "text": "Introduction\n\n\nExecute callback when time-out, built-in object of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nStart timer\n\n\n\n\n\n\nLooped timer\n\n\nvar\n \ntimer\n \n=\n \nscene\n.\ntime\n.\naddEvent\n({\n\n    \ndelay\n:\n \n500\n,\n                \n// ms\n\n    \ncallback\n:\n \ncallback\n,\n\n    \n//args: [],\n\n    \ncallbackScope\n:\n \nthisArg\n,\n\n    \nloop\n:\n \ntrue\n\n\n});\n\n\n\n\n\n\n\n\n\nRepeat timer\n\n\nvar\n \ntimer\n \n=\n \nscene\n.\ntime\n.\naddEvent\n({\n\n    \ndelay\n:\n \n500\n,\n                \n// ms\n\n    \ncallback\n:\n \ncallback\n,\n\n    \n//args: [],\n\n    \ncallbackScope\n:\n \nthisArg\n,\n\n    \nrepeat\n:\n \n4\n\n\n});\n\n\n\n\n\n\n\n\n\nOneshot timer\n\n\nvar\n \ntimer\n \n=\n \nscene\n.\ntime\n.\ndelayedCall\n(\ndelay\n,\n \ncallback\n,\n \nargs\n,\n \ncallbackscope\n);\n  \n// delay in ms\n\n\n\n\n\n\n\n\n\nAll properties of timer\n\n\nvar\n \ntimer\n \n=\n \nscene\n.\ntime\n.\naddEvent\n({\n\n    \ndelay\n:\n \n500\n,\n                \n// ms\n\n    \ncallback\n:\n \ncallback\n,\n\n    \nargs\n:\n \n[],\n\n    \ncallbackScope\n:\n \nthisArg\n,\n\n    \nloop\n:\n \nfasle\n,\n\n    \nrepeat\n:\n \n0\n,\n\n    \nstartAt\n:\n \n0\n,\n\n    \ntimeScale\n:\n \n1\n,\n\n    \npaused\n:\n \nfalse\n\n\n});\n\n\n\n\n\n\n\n\n\nStatus of timer\n\n\n\n\n\n\nGet elapsed time\n\n\nvar\n \nelapsed\n \n=\n \ntimer\n.\ngetElapsed\n();\n   \n// ms\n\n\nvar\n \nelapsed\n \n=\n \ntimer\n.\ngetElapsedSeconds\n();\n \n// sec\n\n\n\n\n\n\n\n\n\nGet repeat count\n\n\nvar\n \nrepeat\n \n=\n \ntimer\n.\ngetRepeatCount\n();\n\n\n\n\n\n\n\n\n\nGets the progress of the current iteration\n\n\nvar\n \nprogress\n \n=\n \ntimer\n.\ngetProgress\n();\n  \n// elapsed / delay\n\n\n\n\n\n\n\n\n\nGets the progress of the timer overall, factoring in repeats.\n\n\nvar\n \nprogress\n \n=\n \ntimer\n.\ngetOverallProgress\n();\n  \n// totalElapsed / totalDuration\n\n\n\n\n\n\n\n\n\nGet delay time\n\n\nvar\n \ndelay\n \n=\n \ntimer\n.\ndelay\n;\n   \n// ms\n\n\n\n\n\n\n\n\n\nIs paused\n\n\nvar\n \nisPaused\n \n=\n \ntimer\n.\npaused\n;\n\n\n\n\n\n\n\n\n\nGet time-scale\n\n\nvar\n \ntimeScale\n \n=\n \ntimer\n.\ntimeScale\n;\n\n\n\n\n\n\n\n\n\nCommands of timer\n\n\n\n\n\n\nPause timer\n\n\ntimer\n.\npaused\n \n=\n \ntrue\n;\n\n\n\n\n\n\n\n\n\nResume timer\n\n\ntimer\n.\npaused\n \n=\n \nfalse\n;\n\n\n\n\n\n\n\n\n\nRemove timer from timeline\n\n\ntimer\n.\nremove\n();\n\n\n\n\n\n\n\n\n\nSet time-scale\n\n\ntimer\n.\ntimeScale\n \n=\n \n2\n;", 
            "title": "Timer"
        }, 
        {
            "location": "/timer/index.html#introduction", 
            "text": "Execute callback when time-out, built-in object of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/timer/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/timer/index.html#start-timer", 
            "text": "Looped timer  var   timer   =   scene . time . addEvent ({ \n     delay :   500 ,                  // ms \n     callback :   callback , \n     //args: [], \n     callbackScope :   thisArg , \n     loop :   true  });     Repeat timer  var   timer   =   scene . time . addEvent ({ \n     delay :   500 ,                  // ms \n     callback :   callback , \n     //args: [], \n     callbackScope :   thisArg , \n     repeat :   4  });     Oneshot timer  var   timer   =   scene . time . delayedCall ( delay ,   callback ,   args ,   callbackscope );    // delay in ms     All properties of timer  var   timer   =   scene . time . addEvent ({ \n     delay :   500 ,                  // ms \n     callback :   callback , \n     args :   [], \n     callbackScope :   thisArg , \n     loop :   fasle , \n     repeat :   0 , \n     startAt :   0 , \n     timeScale :   1 , \n     paused :   false  });", 
            "title": "Start timer"
        }, 
        {
            "location": "/timer/index.html#status-of-timer", 
            "text": "Get elapsed time  var   elapsed   =   timer . getElapsed ();     // ms  var   elapsed   =   timer . getElapsedSeconds ();   // sec     Get repeat count  var   repeat   =   timer . getRepeatCount ();     Gets the progress of the current iteration  var   progress   =   timer . getProgress ();    // elapsed / delay     Gets the progress of the timer overall, factoring in repeats.  var   progress   =   timer . getOverallProgress ();    // totalElapsed / totalDuration     Get delay time  var   delay   =   timer . delay ;     // ms     Is paused  var   isPaused   =   timer . paused ;     Get time-scale  var   timeScale   =   timer . timeScale ;", 
            "title": "Status of timer"
        }, 
        {
            "location": "/timer/index.html#commands-of-timer", 
            "text": "Pause timer  timer . paused   =   true ;     Resume timer  timer . paused   =   false ;     Remove timer from timeline  timer . remove ();     Set time-scale  timer . timeScale   =   2 ;", 
            "title": "Commands of timer"
        }, 
        {
            "location": "/timeline/index.html", 
            "text": "Introduction\n\n\nUpdate timers, built-in object of phaser. Each scene has a timeline (\nscene.time\n) already.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nTime-scale\n\n\n\n\n\n\nGet time-scale\n\n\nvar\n \ntimeScale\n \n=\n \nscene\n.\ntime\n.\ntimeScale\n;\n\n\n\n\n\n\n\n\n\nSet time-scale\n\n\nscene\n.\ntime\n.\ntimeScale\n \n=\n \n2\n;\n\n\n\n\n\n\n\n\n\nPause or resume\n\n\n\n\n\n\nPause\n\n\nscene\n.\ntime\n.\npaused\n \n=\n \ntrue\n;\n\n\n\n\n\n\n\n\n\nResume\n\n\nscene\n.\ntime\n.\npaused\n \n=\n \nfalse\n;\n\n\n\n\n\n\n\n\n\nGet current game-time\n\n\nvar\n \ntime\n \n=\n \nscene\n.\ntime\n.\nnow\n;\n\n\n\n\n\nGame-time is not system time.\n\n\nCreate timeline object\n\n\nvar\n \ntimeline\n \n=\n \nnew\n \nPhaser\n.\nTime\n.\nClock\n(\nscene\n);", 
            "title": "Timeline"
        }, 
        {
            "location": "/timeline/index.html#introduction", 
            "text": "Update timers, built-in object of phaser. Each scene has a timeline ( scene.time ) already.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/timeline/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/timeline/index.html#time-scale", 
            "text": "Get time-scale  var   timeScale   =   scene . time . timeScale ;     Set time-scale  scene . time . timeScale   =   2 ;", 
            "title": "Time-scale"
        }, 
        {
            "location": "/timeline/index.html#pause-or-resume", 
            "text": "Pause  scene . time . paused   =   true ;     Resume  scene . time . paused   =   false ;", 
            "title": "Pause or resume"
        }, 
        {
            "location": "/timeline/index.html#get-current-game-time", 
            "text": "var   time   =   scene . time . now ;   Game-time is not system time.", 
            "title": "Get current game-time"
        }, 
        {
            "location": "/timeline/index.html#create-timeline-object", 
            "text": "var   timeline   =   new   Phaser . Time . Clock ( scene );", 
            "title": "Create timeline object"
        }, 
        {
            "location": "/clockplugin/index.html", 
            "text": "Introduction\n\n\nA clock to count elapsed time.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \nclock\n \n=\n \nnew\n \nClockPlugin\n(\nscene\n,\n \n{\n\n    \n// timeScale: 1\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\ntimeScale : time-scale for counting elapsed time.\n\n\n\n\nStart counting\n\n\nclock\n.\nstart\n();\n\n\n// clock.start(startAt);  // start-at time in ms\n\n\n\n\n\nGet elapsed time\n\n\nvar\n \nnow\n \n=\n \nclock\n.\nnow\n;\n  \n// elapsed time in ms\n\n\n\n\n\nPause, Resume, stop counting\n\n\nclock\n.\npause\n();\n\n\nclock\n.\nresume\n();\n\n\nclock\n.\nstop\n();\n\n\n\n\n\nSeek elapsed time\n\n\nclock\n.\nseek\n(\ntime\n);\n   \n// elapsed time in ms\n\n\n\n\n\nState of counting\n\n\nvar\n \nisRunning\n \n=\n \nclock\n.\nisRunning\n;\n\n\n\n\n\nTime-scale\n\n\nvar\n \ntimeScale\n \n=\n \nclock\n.\ntimeScale\n;\n\n\nclock\n.\ntimeScale\n \n=\n \n0.5\n;", 
            "title": "Clock"
        }, 
        {
            "location": "/clockplugin/index.html#introduction", 
            "text": "A clock to count elapsed time.   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/clockplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/clockplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/clockplugin/index.html#create-instance", 
            "text": "var   clock   =   new   ClockPlugin ( scene ,   { \n     // timeScale: 1  });   Properties   timeScale : time-scale for counting elapsed time.", 
            "title": "Create instance"
        }, 
        {
            "location": "/clockplugin/index.html#start-counting", 
            "text": "clock . start ();  // clock.start(startAt);  // start-at time in ms", 
            "title": "Start counting"
        }, 
        {
            "location": "/clockplugin/index.html#get-elapsed-time", 
            "text": "var   now   =   clock . now ;    // elapsed time in ms", 
            "title": "Get elapsed time"
        }, 
        {
            "location": "/clockplugin/index.html#pause-resume-stop-counting", 
            "text": "clock . pause ();  clock . resume ();  clock . stop ();", 
            "title": "Pause, Resume, stop counting"
        }, 
        {
            "location": "/clockplugin/index.html#seek-elapsed-time", 
            "text": "clock . seek ( time );     // elapsed time in ms", 
            "title": "Seek elapsed time"
        }, 
        {
            "location": "/clockplugin/index.html#state-of-counting", 
            "text": "var   isRunning   =   clock . isRunning ;", 
            "title": "State of counting"
        }, 
        {
            "location": "/clockplugin/index.html#time-scale", 
            "text": "var   timeScale   =   clock . timeScale ;  clock . timeScale   =   0.5 ;", 
            "title": "Time-scale"
        }, 
        {
            "location": "/datamanager/index.html", 
            "text": "Introduction\n\n\nStore data in key-value pairs, built-inobject of phaser.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nSet value\n\n\nparent\n.\ndata\n.\nset\n(\nkey\n,\n \nvalue\n);\n\n\nparent\n.\ndata\n.\nmerge\n(\ndata\n);\n     \n// {}\n\n\n\n\n\nPop key\n\n\nvar\n \nvalue\n \n=\n \nparent\n.\ndata\n.\npop\n(\nkey\n);\n\n\n\n\n\nGet and remove that key.\n\n\nRemove key\n\n\nparent\n.\ndata\n.\nremove\n(\nkey\n);\n\n\n\n\n\nGet value\n\n\nvar\n \nvalue\n \n=\n \nparent\n.\ndata\n.\nget\n(\nkey\n);\n\n\nvar\n \nallValues\n \n=\n \nparent\n.\ndata\n.\ngetAll\n();\n  \n// return a copy of data\n\n\n\n\n\nQuery\n\n\nUsing \nstring.match()\n to pick matched keys.\n\n\nvar\n \nresult\n \n=\n \nparent\n.\ndata\n.\nquery\n(\nrgExp\n);\n\n\n\n\n\nFreeze\n\n\nvar\n \nisFrozen\n \n=\n \nparent\n.\ndata\n.\nfreeze\n;\n\n\nparent\n.\ndata\n.\nfreeze\n \n=\n \ntrue\n;\n\n\n\n\n\nNo changes can be written to it.\n\n\nHas key\n\n\nvar\n \nhasKey\n \n=\n \nparent\n.\ndata\n.\nhas\n(\nkey\n);\n\n\n\n\n\nFor each key\n\n\nparent\n.\ndata\n.\neach\n(\nfunction\n(\nparent\n,\n \nkey\n,\n \nvalue\n){\n\n    \n/* ... */\n\n\n},\n \nscope\n);\n\n\n\n\n\nCount of data\n\n\nvar\n \ncnt\n \n=\n \nparent\n.\ndata\n.\ncount\n;\n\n\n\n\n\nReset\n\n\nReset status and clean all keys.\n\n\nparent\n.\ndata\n.\nreset\n()\n\n\n\n\n\nEvent of changing data\n\n\nEvent 'setdata', 'changedata' will be fired when invoking \nparent.data.set(key, value)\n.\n\n\nparent\n.\ndata\n.\nevent\n.\non\n(\nsetdata\n,\n \nfunction\n(\nparent\n,\n \nkey\n,\n \nvalue\n){\n\n    \n/* ... */\n\n\n},\n \nscope\n);\n\n\n\n\n\nparent\n.\ndata\n.\nevent\n.\non\n(\nchangedata\n,\n \nfunction\n(\nparent\n,\n \nkey\n,\n \nvalue\n,\n \nresetValue\n){\n\n    \n// resetValue(newValue);  // overwrite value to newValue\n\n\n},\n \nscope\n);", 
            "title": "Data manager"
        }, 
        {
            "location": "/datamanager/index.html#introduction", 
            "text": "Store data in key-value pairs, built-inobject of phaser.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/datamanager/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/datamanager/index.html#set-value", 
            "text": "parent . data . set ( key ,   value );  parent . data . merge ( data );       // {}", 
            "title": "Set value"
        }, 
        {
            "location": "/datamanager/index.html#pop-key", 
            "text": "var   value   =   parent . data . pop ( key );   Get and remove that key.", 
            "title": "Pop key"
        }, 
        {
            "location": "/datamanager/index.html#remove-key", 
            "text": "parent . data . remove ( key );", 
            "title": "Remove key"
        }, 
        {
            "location": "/datamanager/index.html#get-value", 
            "text": "var   value   =   parent . data . get ( key );  var   allValues   =   parent . data . getAll ();    // return a copy of data", 
            "title": "Get value"
        }, 
        {
            "location": "/datamanager/index.html#query", 
            "text": "Using  string.match()  to pick matched keys.  var   result   =   parent . data . query ( rgExp );", 
            "title": "Query"
        }, 
        {
            "location": "/datamanager/index.html#freeze", 
            "text": "var   isFrozen   =   parent . data . freeze ;  parent . data . freeze   =   true ;   No changes can be written to it.", 
            "title": "Freeze"
        }, 
        {
            "location": "/datamanager/index.html#has-key", 
            "text": "var   hasKey   =   parent . data . has ( key );", 
            "title": "Has key"
        }, 
        {
            "location": "/datamanager/index.html#for-each-key", 
            "text": "parent . data . each ( function ( parent ,   key ,   value ){ \n     /* ... */  },   scope );", 
            "title": "For each key"
        }, 
        {
            "location": "/datamanager/index.html#count-of-data", 
            "text": "var   cnt   =   parent . data . count ;", 
            "title": "Count of data"
        }, 
        {
            "location": "/datamanager/index.html#reset", 
            "text": "Reset status and clean all keys.  parent . data . reset ()", 
            "title": "Reset"
        }, 
        {
            "location": "/datamanager/index.html#event-of-changing-data", 
            "text": "Event 'setdata', 'changedata' will be fired when invoking  parent.data.set(key, value) .  parent . data . event . on ( setdata ,   function ( parent ,   key ,   value ){ \n     /* ... */  },   scope );   parent . data . event . on ( changedata ,   function ( parent ,   key ,   value ,   resetValue ){ \n     // resetValue(newValue);  // overwrite value to newValue  },   scope );", 
            "title": "Event of changing data"
        }, 
        {
            "location": "/array/index.html", 
            "text": "Introduction\n\n\nBuilt-in javascript object.\n\n\n\n\nAuthor: Built-in javascript function\n\n\n\n\nUsage\n\n\nFilter elements\n\n\nCreates a new array with all elements that pass the test function. \nReference\n\n\n// var elems = [...]\n\n\nvar\n \nresult\n \n=\n \nelems\n.\nfilter\n(\nfunction\n(\nel\n){\n\n    \nreturn\n \n(\nel\n.\nx\n \n \n400\n);\n\n\n});", 
            "title": "Array"
        }, 
        {
            "location": "/array/index.html#introduction", 
            "text": "Built-in javascript object.   Author: Built-in javascript function", 
            "title": "Introduction"
        }, 
        {
            "location": "/array/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/array/index.html#filter-elements", 
            "text": "Creates a new array with all elements that pass the test function.  Reference  // var elems = [...]  var   result   =   elems . filter ( function ( el ){ \n     return   ( el . x     400 );  });", 
            "title": "Filter elements"
        }, 
        {
            "location": "/csvtoarray/index.html", 
            "text": "Introduction\n\n\nGenerate array from csv string.\n\n\n\n\nAuthor: \nBen\n\n\nMethod only\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nGenerate array\n\n\nvar\n \narr\n \n=\n \nCSVToArray\n(\ncsv\n);\n\n\n// var arr = CSVToArray(csv, delimiter);", 
            "title": "CSV to array"
        }, 
        {
            "location": "/csvtoarray/index.html#introduction", 
            "text": "Generate array from csv string.   Author:  Ben  Method only", 
            "title": "Introduction"
        }, 
        {
            "location": "/csvtoarray/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/csvtoarray/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/csvtoarray/index.html#generate-array", 
            "text": "var   arr   =   CSVToArray ( csv );  // var arr = CSVToArray(csv, delimiter);", 
            "title": "Generate array"
        }, 
        {
            "location": "/eventemitter3/index.html", 
            "text": "Introduction\n\n\nEvent emitter\n.\n\n\nUsage\n\n\nGet event emitter\n\n\n\n\nScene: \n    \nvar\n \nee\n \n=\n \nscene\n.\nsys\n.\nevents\n;\n\n\n\n\nGame object:\n    \nvar\n \nee\n \n=\n \ngameobject\n;\n\n\n\n\n\n\nAttach listener\n\n\nee\n.\non\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n);\n\n\nee\n.\nonce\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n);\n  \n// only fire listeners one time\n\n\n\n\n\nAlias\n\n\nee\n.\naddListener\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n);\n\n\nee\n.\naddListener\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n,\n \ntrue\n);\n  \n// only fire listeners one time\n\n\n\n\n\nFire event\n\n\nee\n.\nemit\n(\neventName\n);\n\n\n\n\n\nRemove listeners\n\n\nee\n.\noff\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n);\n\n\nee\n.\noff\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n,\n \ntrue\n);\n   \n// only remove one-time listeners\n\n\n\n\n\nAlias\n\n\nee\n.\nremoveListener\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n);\n \n\nee\n.\nremoveListener\n(\neventName\n,\n \ncallback\n,\n \ncallbackScope\n,\n \ntrue\n);\n  \n// only remove one-time listeners\n\n\n\n\n\nRemove all listeners\n\n\nee\n.\nremoveAllListeners\n();\n\n\n\n\n\nGet listeners count\n\n\nvar\n \ncount\n \n=\n \nee\n.\nlistenerCount\n(\neventName\n);\n\n\n//var noListener = (ee.listenerCount(eventName) === 0);\n\n\n\n\n\nGet listeners\n\n\nvar\n \nlisteners\n \n=\n \nee\n.\nlisteners\n(\neventName\n);\n\n\n\n\n\nListener\n\n\n{\n\n    \nfn\n:\n \ncallback\n,\n\n    \ncontext\n:\n \ncallbackScope\n,\n\n    \nonce\n:\n \nonce\n\n\n}", 
            "title": "Event emitter"
        }, 
        {
            "location": "/eventemitter3/index.html#introduction", 
            "text": "Event emitter .", 
            "title": "Introduction"
        }, 
        {
            "location": "/eventemitter3/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/eventemitter3/index.html#get-event-emitter", 
            "text": "Scene: \n     var   ee   =   scene . sys . events ;   Game object:\n     var   ee   =   gameobject ;", 
            "title": "Get event emitter"
        }, 
        {
            "location": "/eventemitter3/index.html#attach-listener", 
            "text": "ee . on ( eventName ,   callback ,   callbackScope );  ee . once ( eventName ,   callback ,   callbackScope );    // only fire listeners one time   Alias  ee . addListener ( eventName ,   callback ,   callbackScope );  ee . addListener ( eventName ,   callback ,   callbackScope ,   true );    // only fire listeners one time", 
            "title": "Attach listener"
        }, 
        {
            "location": "/eventemitter3/index.html#fire-event", 
            "text": "ee . emit ( eventName );", 
            "title": "Fire event"
        }, 
        {
            "location": "/eventemitter3/index.html#remove-listeners", 
            "text": "ee . off ( eventName ,   callback ,   callbackScope );  ee . off ( eventName ,   callback ,   callbackScope ,   true );     // only remove one-time listeners   Alias  ee . removeListener ( eventName ,   callback ,   callbackScope );   ee . removeListener ( eventName ,   callback ,   callbackScope ,   true );    // only remove one-time listeners", 
            "title": "Remove listeners"
        }, 
        {
            "location": "/eventemitter3/index.html#remove-all-listeners", 
            "text": "ee . removeAllListeners ();", 
            "title": "Remove all listeners"
        }, 
        {
            "location": "/eventemitter3/index.html#get-listeners-count", 
            "text": "var   count   =   ee . listenerCount ( eventName );  //var noListener = (ee.listenerCount(eventName) === 0);", 
            "title": "Get listeners count"
        }, 
        {
            "location": "/eventemitter3/index.html#get-listeners", 
            "text": "var   listeners   =   ee . listeners ( eventName );", 
            "title": "Get listeners"
        }, 
        {
            "location": "/eventemitter3/index.html#listener", 
            "text": "{ \n     fn :   callback , \n     context :   callbackScope , \n     once :   once  }", 
            "title": "Listener"
        }, 
        {
            "location": "/runcommands/index.html", 
            "text": "Introduction\n\n\nRun commands in array.\n\n\n\n\nAuthor: Rex\n\n\nMethod only\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nRun commands\n\n\nrunCommands\n(\ncommands\n,\n \nscope\n);\n\n\n\n\n\n\n\nFormat of command :\n    \n[\nfnName\n,\n \nparam0\n,\n \nparam1\n,\n \n...]\n\n\n\n\nCommands in nested array :\n    \n[\n\n    \ncommand0\n,\n\n    \ncommand1\n\n    \n[\n\n        \ncommand2\n,\n\n        \ncommand3\n\n    \n]\n\n\n]\n\n\n\n\nRun command :\n    \nscope\n[\nfnName\n].\ncall\n(\nscope\n,\n \nparam0\n,\n \nparam1\n \n...)", 
            "title": "Run commands"
        }, 
        {
            "location": "/runcommands/index.html#introduction", 
            "text": "Run commands in array.   Author: Rex  Method only", 
            "title": "Introduction"
        }, 
        {
            "location": "/runcommands/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/runcommands/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/runcommands/index.html#run-commands", 
            "text": "runCommands ( commands ,   scope );    Format of command :\n     [ fnName ,   param0 ,   param1 ,   ...]   Commands in nested array :\n     [ \n     command0 , \n     command1 \n     [ \n         command2 , \n         command3 \n     ]  ]   Run command :\n     scope [ fnName ]. call ( scope ,   param0 ,   param1   ...)", 
            "title": "Run commands"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html", 
            "text": "Introduction\n\n\nRecorder of \nT\n ime-\nC\n ommand-\nR\n ecorder-\nP\n layer, to store commands with time.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \nrecorder\n \n=\n \nnew\n \nRecorderPlugin\n(\nscene\n);\n\n\n\n\n\nStart recording\n\n\nrecorder\n.\nstart\n();\n\n\n// recorder.start(startAt);  // start-at time in ms\n\n\n\n\n\nPush commands\n\n\nrecorder\n.\naddCommand\n([\nfnName\n,\n \nparam0\n,\n \nparam1\n,\n \n...]);\n\n\n// recorder.addCommand([command0, command1, ...]);\n\n\n// recorder.addCommand([fnName, param0, param1, ...], offset);  // time-offset in ms\n\n\n\n\n\nSee also \nRun commands\n\n\nGet commands\n\n\nvar\n \ncommands\n \n=\n \nrecorder\n.\ngetCommands\n();\n        \n// get a shallow copy of commands\n\n\n// var commands = recorder.getCommands(true); // get reference of commands\n\n\n\n\n\nFormat of return commands:\n\n\n[\n\n    \n[\ndt\n,\n \n[\ncommand\n]],\n\n    \n[\ndt\n,\n \n[\ncommand0\n,\ncommand1\n]],\n\n    \n...\n\n\n]\n\n\n\n\n\nPause, Resume, stop recording\n\n\nrecorder\n.\npause\n();\n\n\nrecorder\n.\nresume\n();\n\n\nrecorder\n.\nstop\n();\n\n\n\n\n\nSeek elapsed time\n\n\nrecorder\n.\nseek\n(\ntime\n);\n   \n// elapsed time in ms\n\n\n\n\n\nState of recorder\n\n\nvar\n \nisRecording\n \n=\n \nrecorder\n.\nisRecording\n;\n\n\nvar\n \nnow\n \n=\n \nrecorder\n.\nnow\n;\n\n\n\n\n\nTime-scale\n\n\nvar\n \ntimeScale\n \n=\n \nrecorder\n.\ntimeScale\n;\n\n\nrecorder\n.\ntimeScale\n \n=\n \n0.5\n;", 
            "title": "Recoder"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#introduction", 
            "text": "Recorder of  T  ime- C  ommand- R  ecorder- P  layer, to store commands with time.   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#create-instance", 
            "text": "var   recorder   =   new   RecorderPlugin ( scene );", 
            "title": "Create instance"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#start-recording", 
            "text": "recorder . start ();  // recorder.start(startAt);  // start-at time in ms", 
            "title": "Start recording"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#push-commands", 
            "text": "recorder . addCommand ([ fnName ,   param0 ,   param1 ,   ...]);  // recorder.addCommand([command0, command1, ...]);  // recorder.addCommand([fnName, param0, param1, ...], offset);  // time-offset in ms   See also  Run commands", 
            "title": "Push commands"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#get-commands", 
            "text": "var   commands   =   recorder . getCommands ();          // get a shallow copy of commands  // var commands = recorder.getCommands(true); // get reference of commands   Format of return commands:  [ \n     [ dt ,   [ command ]], \n     [ dt ,   [ command0 , command1 ]], \n     ...  ]", 
            "title": "Get commands"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#pause-resume-stop-recording", 
            "text": "recorder . pause ();  recorder . resume ();  recorder . stop ();", 
            "title": "Pause, Resume, stop recording"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#seek-elapsed-time", 
            "text": "recorder . seek ( time );     // elapsed time in ms", 
            "title": "Seek elapsed time"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#state-of-recorder", 
            "text": "var   isRecording   =   recorder . isRecording ;  var   now   =   recorder . now ;", 
            "title": "State of recorder"
        }, 
        {
            "location": "/tcrprecoderplugin/index.html#time-scale", 
            "text": "var   timeScale   =   recorder . timeScale ;  recorder . timeScale   =   0.5 ;", 
            "title": "Time-scale"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html", 
            "text": "Introduction\n\n\nPlayer of \nT\n ime-\nC\n ommand-\nR\n ecorder-\nP\n layer, to run commands on time.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \nplayer\n \n=\n \nnew\n \nPlayerPlugin\n(\nscene\n,\n \n{\n\n    \n// timeUnit: 0,        // \nms\n|0|\ns\n|\nsec\n|1\n\n    \n// dtMode: 0,          // \nabs\n|\nabsolute\n|0|\ninc\n|\nincrement\n|1\n\n    \n// commands: [],       // [[dt, command], [dt, command], ...]\n\n    \n// scope: undefined\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\ntimeUnit: see \nnext section\n\n\ndtMode: see \nnext section\n\n\ncommands: see \nnext section\n\n\n\n\nLoad commands\n\n\nplayer\n.\nload\n(\ncommands\n,\n \nscope\n,\n \n{\n\n    \n// timeUnit: 0,        // \nms\n|0|\ns\n|\nsec\n|1\n\n    \n// dtMode: 0           // \nabs\n|\nabsolute\n|0|\ninc\n|\nincrement\n|1\n\n\n});\n\n\n\n\n\n\n\nCommands : see also \nRun commands\n\n    \n[\n\n    \n[\ndt\n,\n \ncommand\n],\n\n    \n[\ndt\n,\n \ncommand\n],\n\n    \n...\n\n\n]\n\n\n\n\nFormat of each row :\n    \n[\ndt\n,\n \nfnName\n,\n \nparam0\n,\n \nparam1\n,\n \n...]\n\n\n\n    \n[\ndt\n,\n \n[\nfnName\n,\n \nparam0\n,\n \nparam1\n,\n \n...]]\n\n\n\n    \n[\ndt\n,\n \n[\ncommand0\n,\n \ncommand1\n,\n \n...]]\n\n\n\n\n\n\n\n\ntimeUnit: time-unit of dt\n\n\n'ms'\n, or \n0\n : dt in millisecond\n\n\n's'\n, \n'sec'\n, or 1 : dt in second\n\n\n\n\n\n\ndtMode: mode of counting dt\n\n\n'abs'\n, \n'absolute'\n, or \n0\n : timeout = dt\n\n\n'inc'\n, \n'increment'\n, \n1\n : timeout = dt + previous-timeout\n\n\n\n\n\n\n\n\nStart playing\n\n\nplayer\n.\nstart\n();\n\n\n// player.start(startAt);  // start-at time in ms\n\n\n\n\n\nEvents\n\n\n\n\nComplete\n    \nplayer\n.\non\n(\ncomplete\n,\n \nfunction\n(){});\n\n\n\n\nRun command\n    \nplayer\n.\non\n(\nruncommand\n,\n \nfunction\n(\ncommands\n,\n \nscope\n){});\n\n\n\n\n\n\nPause, Resume, stop playing\n\n\nplayer\n.\npause\n();\n\n\nplayer\n.\nresume\n();\n\n\nplayer\n.\nstop\n();\n\n\n\n\n\nSeek elapsed time\n\n\nplayer\n.\nseek\n(\ntime\n);\n   \n// elapsed time in ms\n\n\n\n\n\nState of player\n\n\nvar\n \nisPlaying\n \n=\n \nplayer\n.\nisPlaying\n;\n\n\nvar\n \nisComplete\n \n=\n \nplayer\n.\nisComplate\n;\n\n\nvar\n \nnow\n \n=\n \nplayer\n.\nnow\n;\n\n\n\n\n\nTime-scale\n\n\nvar\n \ntimeScale\n \n=\n \nplayer\n.\ntimeScale\n;\n\n\nplayer\n.\ntimeScale\n \n=\n \n0.5\n;", 
            "title": "Player"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#introduction", 
            "text": "Player of  T  ime- C  ommand- R  ecorder- P  layer, to run commands on time.   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#create-instance", 
            "text": "var   player   =   new   PlayerPlugin ( scene ,   { \n     // timeUnit: 0,        //  ms |0| s | sec |1 \n     // dtMode: 0,          //  abs | absolute |0| inc | increment |1 \n     // commands: [],       // [[dt, command], [dt, command], ...] \n     // scope: undefined  });   Properties   timeUnit: see  next section  dtMode: see  next section  commands: see  next section", 
            "title": "Create instance"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#load-commands", 
            "text": "player . load ( commands ,   scope ,   { \n     // timeUnit: 0,        //  ms |0| s | sec |1 \n     // dtMode: 0           //  abs | absolute |0| inc | increment |1  });    Commands : see also  Run commands \n     [ \n     [ dt ,   command ], \n     [ dt ,   command ], \n     ...  ]   Format of each row :\n     [ dt ,   fnName ,   param0 ,   param1 ,   ...]  \n     [ dt ,   [ fnName ,   param0 ,   param1 ,   ...]]  \n     [ dt ,   [ command0 ,   command1 ,   ...]]     timeUnit: time-unit of dt  'ms' , or  0  : dt in millisecond  's' ,  'sec' , or 1 : dt in second    dtMode: mode of counting dt  'abs' ,  'absolute' , or  0  : timeout = dt  'inc' ,  'increment' ,  1  : timeout = dt + previous-timeout", 
            "title": "Load commands"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#start-playing", 
            "text": "player . start ();  // player.start(startAt);  // start-at time in ms", 
            "title": "Start playing"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#events", 
            "text": "Complete\n     player . on ( complete ,   function (){});   Run command\n     player . on ( runcommand ,   function ( commands ,   scope ){});", 
            "title": "Events"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#pause-resume-stop-playing", 
            "text": "player . pause ();  player . resume ();  player . stop ();", 
            "title": "Pause, Resume, stop playing"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#seek-elapsed-time", 
            "text": "player . seek ( time );     // elapsed time in ms", 
            "title": "Seek elapsed time"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#state-of-player", 
            "text": "var   isPlaying   =   player . isPlaying ;  var   isComplete   =   player . isComplate ;  var   now   =   player . now ;", 
            "title": "State of player"
        }, 
        {
            "location": "/tcrpplayerplugin/index.html#time-scale", 
            "text": "var   timeScale   =   player . timeScale ;  player . timeScale   =   0.5 ;", 
            "title": "Time-scale"
        }, 
        {
            "location": "/gashaponplugin/index.html", 
            "text": "Introduction\n\n\nPick random item from box.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene, or game object\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \ngashapon\n \n=\n \nnew\n \nGashaponPlugin\n(\nscene\n,\n \n{\n\n    \nmode\n:\n \nshuffle\n,\n  \n// 0|\nshuffle\n|1|\nrandom\n\n    \nitems\n:\n \n{\n  \n// name:count\n\n        \na\n:\n1\n,\n \n        \nb\n:\n2\n,\n \n        \nc\n:\n3\n \n    \n},\n\n    \nreload\n:\n \ntrue\n,\n     \n// true|false\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\nmode : \n\n\n'shuffle'\n, or \n0\n : pick item from box without put it back.\n\n\n'random'\n, or \n1\n : pick item from box then put it back.\n\n\n\n\n\n\nreload : set \ntrue\n to reload items when box is empty for \nshuffle\n mode.\n\n\nitems : initial items in box\n\n\n\n\nPick item\n\n\nPick a random item\n\n\nvar\n \nitem\n \n=\n \ngashapon\n.\nnext\n();\n\n\n\n\n\n\n\nreturn \nnull\n if pick nothing\n\n\n\n\nPick specific item\n\n\nvar\n \nitem\n \n=\n \ngashapon\n.\nnext\n(\na\n);\n\n\n\n\n\n\n\nreturn \nnull\n if pick nothing\n\n\n\n\nLast picked item\n\n\nvar\n \nitem\n \n=\n \ngashapon\n.\nresult\n;\n\n\n\n\n\nSet item\n\n\nSet item\n\n\ngashapon\n.\nsetItem\n(\na\n,\n \n1\n);\n\n\n// gashapon.setItem(\na\n, 1).setItem(\nb\n, 2).setItem(\nc\n, 3);\n\n\n\n\n\nAdd item\n\n\ngashapon\n.\naddItem\n(\na\n,\n1\n);\n\n\n\n\n\nRemove item\n\n\nRemove item\n\n\ngashapon\n.\nremoveItem\n(\na\n);\n\n\n// gashapon.removeItem(\nb\n).gashapon.removeItem(\nc\n);\n\n\n\n\n\nRemove all items\n\n\ngashapon\n.\nremoveAllItems\n();\n\n\n\n\n\nCurrent status\n\n\nGet current status\n\n\nvar\n \nstatus\n \n=\n \ngashapon\n.\ntoJSON\n();\n\n\n\n\n\nClone object\n\n\nvar\n \nstatus\n \n=\n \ngashapon\n.\ntoJSON\n();\n\n\nvar\n \ngashapon2\n \n=\n \nnew\n \nGashapon\n(\nstatus\n);\n\n\n\n\n\nOverwrite current status\n\n\nvar\n \nstatus\n \n=\n \ngashapon\n.\ntoJSON\n();\n\n\n// gashapon.next()...\n\n\ngashapon\n.\nresetFromJSON\n(\nstatus\n);\n\n\n\n\n\nGet items\n\n\nFor each item\n\n\ngashapon\n.\neachItem\n(\nfunction\n(\nname\n,\n \ncount\n){\n\n    \nconsole\n.\nlog\n(\nname\n \n+\n \n: \n \n+\n \ncount\n);\n\n\n});\n\n\n\n\n\nGet items\n\n\nvar\n \nitems\n \n=\n \ngashapon\n.\ngetItems\n();", 
            "title": "Gashapon"
        }, 
        {
            "location": "/gashaponplugin/index.html#introduction", 
            "text": "Pick random item from box.   Author: Rex  Member of scene, or game object", 
            "title": "Introduction"
        }, 
        {
            "location": "/gashaponplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/gashaponplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/gashaponplugin/index.html#create-instance", 
            "text": "var   gashapon   =   new   GashaponPlugin ( scene ,   { \n     mode :   shuffle ,    // 0| shuffle |1| random \n     items :   {    // name:count \n         a : 1 ,  \n         b : 2 ,  \n         c : 3  \n     }, \n     reload :   true ,       // true|false  });   Properties   mode :   'shuffle' , or  0  : pick item from box without put it back.  'random' , or  1  : pick item from box then put it back.    reload : set  true  to reload items when box is empty for  shuffle  mode.  items : initial items in box", 
            "title": "Create instance"
        }, 
        {
            "location": "/gashaponplugin/index.html#pick-item", 
            "text": "", 
            "title": "Pick item"
        }, 
        {
            "location": "/gashaponplugin/index.html#pick-a-random-item", 
            "text": "var   item   =   gashapon . next ();    return  null  if pick nothing", 
            "title": "Pick a random item"
        }, 
        {
            "location": "/gashaponplugin/index.html#pick-specific-item", 
            "text": "var   item   =   gashapon . next ( a );    return  null  if pick nothing", 
            "title": "Pick specific item"
        }, 
        {
            "location": "/gashaponplugin/index.html#last-picked-item", 
            "text": "var   item   =   gashapon . result ;", 
            "title": "Last picked item"
        }, 
        {
            "location": "/gashaponplugin/index.html#set-item", 
            "text": "", 
            "title": "Set item"
        }, 
        {
            "location": "/gashaponplugin/index.html#set-item_1", 
            "text": "gashapon . setItem ( a ,   1 );  // gashapon.setItem( a , 1).setItem( b , 2).setItem( c , 3);", 
            "title": "Set item"
        }, 
        {
            "location": "/gashaponplugin/index.html#add-item", 
            "text": "gashapon . addItem ( a , 1 );", 
            "title": "Add item"
        }, 
        {
            "location": "/gashaponplugin/index.html#remove-item", 
            "text": "", 
            "title": "Remove item"
        }, 
        {
            "location": "/gashaponplugin/index.html#remove-item_1", 
            "text": "gashapon . removeItem ( a );  // gashapon.removeItem( b ).gashapon.removeItem( c );", 
            "title": "Remove item"
        }, 
        {
            "location": "/gashaponplugin/index.html#remove-all-items", 
            "text": "gashapon . removeAllItems ();", 
            "title": "Remove all items"
        }, 
        {
            "location": "/gashaponplugin/index.html#current-status", 
            "text": "", 
            "title": "Current status"
        }, 
        {
            "location": "/gashaponplugin/index.html#get-current-status", 
            "text": "var   status   =   gashapon . toJSON ();", 
            "title": "Get current status"
        }, 
        {
            "location": "/gashaponplugin/index.html#clone-object", 
            "text": "var   status   =   gashapon . toJSON ();  var   gashapon2   =   new   Gashapon ( status );", 
            "title": "Clone object"
        }, 
        {
            "location": "/gashaponplugin/index.html#overwrite-current-status", 
            "text": "var   status   =   gashapon . toJSON ();  // gashapon.next()...  gashapon . resetFromJSON ( status );", 
            "title": "Overwrite current status"
        }, 
        {
            "location": "/gashaponplugin/index.html#get-items", 
            "text": "", 
            "title": "Get items"
        }, 
        {
            "location": "/gashaponplugin/index.html#for-each-item", 
            "text": "gashapon . eachItem ( function ( name ,   count ){ \n     console . log ( name   +   :    +   count );  });", 
            "title": "For each item"
        }, 
        {
            "location": "/gashaponplugin/index.html#get-items_1", 
            "text": "var   items   =   gashapon . getItems ();", 
            "title": "Get items"
        }, 
        {
            "location": "/format/index.html", 
            "text": "Introduction\n\n\nFormat string with variables.\n\n\n\n\nAuthor: Richard Davey\n\n\n\n\nUsage\n\n\nReplace \n%x\n from an array. \nx\n starts from \n1\n.\n\n\n// const Format = Phaser.Utils.String.Format;\n\n\nvar\n \ntemplate\n \n=\n \nhello, %1\n;\n\n\nvar\n \nview\n \n=\n \n[\nrex\n];\n\n\nvar\n \nresult\n \n=\n \nFormat\n(\ntemplate\n,\n \nview\n);", 
            "title": "Format"
        }, 
        {
            "location": "/format/index.html#introduction", 
            "text": "Format string with variables.   Author: Richard Davey", 
            "title": "Introduction"
        }, 
        {
            "location": "/format/index.html#usage", 
            "text": "Replace  %x  from an array.  x  starts from  1 .  // const Format = Phaser.Utils.String.Format;  var   template   =   hello, %1 ;  var   view   =   [ rex ];  var   result   =   Format ( template ,   view );", 
            "title": "Usage"
        }, 
        {
            "location": "/mustache/index.html", 
            "text": "Introduction\n\n\nFormat string with variables.\n\n\nReference\n\n\nUsage\n\n\nvar\n \ntemplate\n \n=\n \nhello, {{name}}\n;\n\n\nvar\n \nview\n \n=\n \n{\n\n    \nname\n:\n \nrex\n\n\n};\n\n\nvar\n \nresult\n \n=\n \nMustache\n.\nrender\n(\ntemplate\n,\n \nview\n);", 
            "title": "Mustache"
        }, 
        {
            "location": "/mustache/index.html#introduction", 
            "text": "Format string with variables.  Reference", 
            "title": "Introduction"
        }, 
        {
            "location": "/mustache/index.html#usage", 
            "text": "var   template   =   hello, {{name}} ;  var   view   =   { \n     name :   rex  };  var   result   =   Mustache . render ( template ,   view );", 
            "title": "Usage"
        }, 
        {
            "location": "/lzstringplugin/index.html", 
            "text": "Introduction\n\n\nCompress string using LZ-based compression algorithm. \nReference\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nLink\n\n\nUsage\n\n\nCreate instance\n\n\nvar\n \nlzstring\n \n=\n \nnew\n \nLZStringPlugin\n(\nscene\n,\n \n{\n\n    \n//encoding: 0,    // 0|\nnone\n|1|\nbase64\n|2|\nutf16\n|3|\nuri\n\n\n});\n\n\n\n\n\nProperties\n\n\n\n\nencoding : \n\n\n'none'\n, or \n0\n : no encoding.\n\n\n'base64'\n, or \n1\n : base64 encoding.\n\n\n'utf16'\n, or \n2\n : UTF16 encoding.\n\n\n'uri'\n, or \n3\n : URI encoding.\n\n\n\n\n\n\n\n\nCompression\n\n\nvar\n \ncompressionResult\n \n=\n \nlzstring\n.\ncompress\n(\nsrc\n);\n\n\n\n\n\nDecompression\n\n\nvar\n \ndecompressionResult\n \n=\n \nlzstring\n.\ndecompress\n(\ncompressionResult\n);\n\n\n\n\n\nSet encoding\n\n\nlzstring\n.\nsetEncoding\n(\nm\n);\n  \n// 0|\nnone\n|1|\nbase64\n|2|\nutf16\n|3|\nuri", 
            "title": "LZ string"
        }, 
        {
            "location": "/lzstringplugin/index.html#introduction", 
            "text": "Compress string using LZ-based compression algorithm.  Reference   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/lzstringplugin/index.html#source-code", 
            "text": "Link", 
            "title": "Source code"
        }, 
        {
            "location": "/lzstringplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/lzstringplugin/index.html#create-instance", 
            "text": "var   lzstring   =   new   LZStringPlugin ( scene ,   { \n     //encoding: 0,    // 0| none |1| base64 |2| utf16 |3| uri  });   Properties   encoding :   'none' , or  0  : no encoding.  'base64' , or  1  : base64 encoding.  'utf16' , or  2  : UTF16 encoding.  'uri' , or  3  : URI encoding.", 
            "title": "Create instance"
        }, 
        {
            "location": "/lzstringplugin/index.html#compression", 
            "text": "var   compressionResult   =   lzstring . compress ( src );", 
            "title": "Compression"
        }, 
        {
            "location": "/lzstringplugin/index.html#decompression", 
            "text": "var   decompressionResult   =   lzstring . decompress ( compressionResult );", 
            "title": "Decompression"
        }, 
        {
            "location": "/lzstringplugin/index.html#set-encoding", 
            "text": "lzstring . setEncoding ( m );    // 0| none |1| base64 |2| utf16 |3| uri", 
            "title": "Set encoding"
        }, 
        {
            "location": "/xorplugin/index.html", 
            "text": "Introduction\n\n\nEncrypt or decrypt string by XOR algorithm.\n\n\n\n\nAuthor: Rex\n\n\nMember of scene\n\n\n\n\nSource code\n\n\nEncrypt\n\n\nDecrypt\n\n\nUsage\n\n\nEncrypt\n\n\nvar\n \nencResult\n \n=\n \nXOR\n.\nEncrypt\n(\nsrc\n,\n \npwd\n);\n\n\n\n\n\nDecrypt\n\n\nvar\n \ndecResult\n \n=\n \nXOR\n.\nDecrypt\n(\nencResult\n,\n \npwd\n);", 
            "title": "XOR"
        }, 
        {
            "location": "/xorplugin/index.html#introduction", 
            "text": "Encrypt or decrypt string by XOR algorithm.   Author: Rex  Member of scene", 
            "title": "Introduction"
        }, 
        {
            "location": "/xorplugin/index.html#source-code", 
            "text": "Encrypt  Decrypt", 
            "title": "Source code"
        }, 
        {
            "location": "/xorplugin/index.html#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/xorplugin/index.html#encrypt", 
            "text": "var   encResult   =   XOR . Encrypt ( src ,   pwd );", 
            "title": "Encrypt"
        }, 
        {
            "location": "/xorplugin/index.html#decrypt", 
            "text": "var   decResult   =   XOR . Decrypt ( encResult ,   pwd );", 
            "title": "Decrypt"
        }
    ]
}