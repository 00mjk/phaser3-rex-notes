!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).rexbuildarcadeobjectplugin=t()}(this,function(){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function n(e){return(n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}var u=Phaser.Physics.Arcade.Components,c=function(e,t){return e.body||(void 0===t&&(t=!1),e.scene.physics.add.existing(e,t)),Object.assign(e,u.Acceleration,u.Angular,u.Bounce,u.Debug,u.Drag,u.Enable,u.Friction,u.Gravity,u.Immovable,u.Mass,u.Size,u.Velocity),e};return function(){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),i(this,n(t).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(t,Phaser.Plugins.BasePlugin),function(e,t,n){t&&r(e.prototype,t),n&&r(e,n)}(t,[{key:"start",value:function(){this.game.events.once("destroy",this.destroy,this)}},{key:"build",value:function(e,t){return function(e,t){if(Array.isArray(e))for(var n=e,r=0,o=n.length;r<o;r++)c(n[r],t);else c(e,t);return e}(e,t)}}]),t}()});
